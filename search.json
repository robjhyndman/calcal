[{"path":"https://pkg.robjhyndman.com/calcal/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/calcal/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://pkg.robjhyndman.com/calcal/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://pkg.robjhyndman.com/calcal/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rob Hyndman. Author, maintainer. Edward Reingold. Copyright holder, contributor.           Original Lisp code Nachum Dershowitz. Copyright holder, contributor.           Original Lisp code","code":""},{"path":"https://pkg.robjhyndman.com/calcal/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hyndman R (2025). calcal: Calendrical Calculations. R package version 0.0.0.9000, https://pkg.robjhyndman.com/calcal/.","code":"@Manual{,   title = {calcal: Calendrical Calculations},   author = {Rob Hyndman},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://pkg.robjhyndman.com/calcal/}, }"},{"path":"https://pkg.robjhyndman.com/calcal/index.html","id":"calcal-","dir":"","previous_headings":"","what":"Calendrical Calculations","title":"Calendrical Calculations","text":"goal calcal calendrical calculations, based algorithms described Reingold Dershowitz (2018) Calendrical Calculations, 4th edition, Cambridge University Press. largely translation Lisp code produced Reingold Dershowitz Calendrica 4.0.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Calendrical Calculations","text":"can install stable version CRAN : can install development version GitHub :","code":"pak::pak(\"calcal\") pak::pak(\"robjhyndman/calcal\")"},{"path":"https://pkg.robjhyndman.com/calcal/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Calendrical Calculations","text":"Dates multiple calendars: religious cultural holidays","code":"library(calcal) library(tibble) library(tidyr) library(dplyr) tibble(   Gregorian = gregorian_date(1990, 2, 20) + 1:10,   ISO = as_iso(Gregorian),   Islamic = as_islamic(Gregorian),   Hebrew = as_hebrew(Gregorian) ) #> # A tibble: 10 × 4 #>      Gregorian        ISO     Islamic         Hebrew #>          <Gre>      <ISO>       <Hij>          <Heb> #>  1 1990-Feb-21 1990-08-03 1410-Raj-25 5750-Shevat-26 #>  2 1990-Feb-22 1990-08-04 1410-Raj-26 5750-Shevat-27 #>  3 1990-Feb-23 1990-08-05 1410-Raj-27 5750-Shevat-28 #>  4 1990-Feb-24 1990-08-06 1410-Raj-28 5750-Shevat-29 #>  5 1990-Feb-25 1990-08-07 1410-Raj-29 5750-Shevat-30 #>  6 1990-Feb-26 1990-09-01 1410-Raj-30   5750-Adar-01 #>  7 1990-Feb-27 1990-09-02 1410-Sha-01   5750-Adar-02 #>  8 1990-Feb-28 1990-09-03 1410-Sha-02   5750-Adar-03 #>  9 1990-Mar-01 1990-09-04 1410-Sha-03   5750-Adar-04 #> 10 1990-Mar-02 1990-09-05 1410-Sha-04   5750-Adar-05 tibble(   year = 2025:2028,   # Christian holidays     Easter = easter(year),    `Orthodox Easter` = orthodox_easter(year),     Christmas = christmas(year),    `Orthodox Christmas` = orthodox_christmas(year),   # Jewish holidays    `Rosh Hashanah` = rosh_hashanah(year),     Passover = passover(year),    `Yom Kippur` = yom_kippur(year),     Sukkot = sukkot(year),     Hanukkah = hanukkah(year),   # Islamic holidays     Ramadan = ramadan(year),    `Eid al-Fitr` = eid_al_fitr(year),    `Eid al-Adha` = eid_al_adha(year),   # Chinese Holidays    `Chinese New Year` = chinese_new_year(year),    `Dragon Festival` = dragon_festival(year),    `Qing Ming` = qing_ming(year),   # Hindu Holidays    `Hindu Lunar New Year` = hindu_lunar_new_year(year),    `Hindu Solar New Year` = mesha_sankranti(year),     Diwali = diwali(year),     Rama = rama(year),     Shiva = shiva(year) ) |>   pivot_longer(-year) |>   pivot_wider(names_from = year, values_from = value) |>   arrange(`2025`) #> # A tibble: 20 × 5 #>    name                      `2025`      `2026`      `2027`      `2028` #>    <chr>                      <Gre>       <Gre>       <Gre>       <Gre> #>  1 Orthodox Christmas   2025-Jan-07 2026-Jan-07 2027-Jan-07 2028-Jan-07 #>  2 Chinese New Year     2025-Jan-29 2026-Feb-17 2027-Feb-06 2028-Jan-26 #>  3 Shiva                2025-Feb-27 2026-Feb-16 2027-Mar-07 2028-Feb-24 #>  4 Ramadan              2025-Mar-01 2026-Feb-18 2027-Feb-08 2028-Jan-28 #>  5 Hindu Lunar New Year 2025-Mar-30 2026-Mar-19 2027-Apr-07 2028-Mar-27 #>  6 Eid al-Fitr          2025-Mar-31 2026-Mar-20 2027-Mar-10 2028-Feb-27 #>  7 Qing Ming            2025-Apr-04 2026-Apr-05 2027-Apr-05 2028-Apr-04 #>  8 Rama                 2025-Apr-06 2026-Mar-27 2027-Apr-15 2028-Apr-04 #>  9 Passover             2025-Apr-13 2026-Apr-02 2027-Apr-22 2028-Apr-11 #> 10 Hindu Solar New Year 2025-Apr-14 2026-Apr-14 2027-Apr-14 2028-Apr-13 #> 11 Easter               2025-Apr-20 2026-Apr-05 2027-Mar-28 2028-Apr-16 #> 12 Orthodox Easter      2025-Apr-20 2026-Apr-12 2027-May-02 2028-Apr-16 #> 13 Dragon Festival      2025-May-31 2026-Jun-19 2027-Jun-09 2028-May-28 #> 14 Eid al-Adha          2025-Jun-07 2026-May-27 2027-May-17 2028-May-05 #> 15 Rosh Hashanah        2025-Sep-23 2026-Sep-12 2027-Oct-02 2028-Sep-21 #> 16 Yom Kippur           2025-Oct-02 2026-Sep-21 2027-Oct-11 2028-Sep-30 #> 17 Sukkot               2025-Oct-07 2026-Sep-26 2027-Oct-16 2028-Oct-05 #> 18 Diwali               2025-Oct-22 2026-Nov-10 2027-Oct-30 2028-Nov-17 #> 19 Hanukkah             2025-Dec-15 2026-Dec-05 2027-Dec-25 2028-Dec-13 #> 20 Christmas            2025-Dec-25 2026-Dec-25 2027-Dec-25 2028-Dec-25"},{"path":"https://pkg.robjhyndman.com/calcal/reference/babylonian_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Babylonian calendar dates — babylonian_date","title":"Babylonian calendar dates — babylonian_date","text":"classical Babylonian calendar lunisolar calendar fixed 19-year Metonic cycle.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/babylonian_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Babylonian calendar dates — babylonian_date","text":"","code":"babylonian_date(   year = integer(),   month = integer(),   leap_month = logical(),   day = integer() )  as_babylonian(date)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/babylonian_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Babylonian calendar dates — babylonian_date","text":"year Numeric vector years month Numeric vector months leap_month Logical vector leap months day Numeric vector days date Vector dates calendar.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/babylonian_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Babylonian calendar dates — babylonian_date","text":"babylonian vector object","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/calcal/reference/babylonian_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Babylonian calendar dates — babylonian_date","text":"","code":"tibble::tibble(   gregorian = gregorian_date(2335, 1, 1:2),   babylonian = as_babylonian(gregorian) ) #> # A tibble: 2 × 2 #>     gregorian   babylonian #>         <Gre>        <Bab> #> 1 2335-Jan-01 2645-Tebe-04 #> 2 2335-Jan-02 2645-Tebe-05 babylonian_date(2335, 6, FALSE, 1:2) #> <babylonian[2]> #> [1] 2335-Ulul-01 2335-Ulul-02"},{"path":"https://pkg.robjhyndman.com/calcal/reference/bahai.html","id":null,"dir":"Reference","previous_headings":"","what":"Baháʼí calendar dates — bahai_date","title":"Baháʼí calendar dates — bahai_date","text":"Baháʼí calendar solar calendar used Baháʼí faith comprising 18 months, four five intercalary days year. New Year northern Spring equinox, corresponding 21 March Gregorian calendar. Ayyám--Há specified month 20.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/bahai.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Baháʼí calendar dates — bahai_date","text":"","code":"bahai_date(   major = integer(),   cycle = integer(),   year = integer(),   month = integer(),   day = integer() )  as_bahai(date)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/bahai.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Baháʼí calendar dates — bahai_date","text":"major numeric vector major periods cycle numeric vector cycles year numeric vector years within cycles month numeric vector months day numeric vector days date numeric vector dates","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/bahai.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Baháʼí calendar dates — bahai_date","text":"bahai vector object","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/calcal/reference/bahai.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Baháʼí calendar dates — bahai_date","text":"","code":"tibble::tibble(   gregorian = gregorian_date(2025, 2, 15) + 0:30,   bahai = as_bahai(gregorian) ) #> # A tibble: 31 × 2 #>      gregorian            bahai #>          <Gre>            <Bah> #>  1 2025-Feb-15 01-10-10-Mulk-09 #>  2 2025-Feb-16 01-10-10-Mulk-10 #>  3 2025-Feb-17 01-10-10-Mulk-11 #>  4 2025-Feb-18 01-10-10-Mulk-12 #>  5 2025-Feb-19 01-10-10-Mulk-13 #>  6 2025-Feb-20 01-10-10-Mulk-14 #>  7 2025-Feb-21 01-10-10-Mulk-15 #>  8 2025-Feb-22 01-10-10-Mulk-16 #>  9 2025-Feb-23 01-10-10-Mulk-17 #> 10 2025-Feb-24 01-10-10-Mulk-18 #> # ℹ 21 more rows bahai_date(1, 10, 11, 3, 5:7) #> <bahai[3]> #> [1] 01-10-11-Jamal-05 01-10-11-Jamal-06 01-10-11-Jamal-07"},{"path":"https://pkg.robjhyndman.com/calcal/reference/bahai_new_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Baháʼí holidays — bahai_new_year","title":"Baháʼí holidays — bahai_new_year","text":"Dates returned Gregorian dates","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/bahai_new_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Baháʼí holidays — bahai_new_year","text":"","code":"bahai_new_year(year)  naw_ruz(year)  feast_of_ridvan(year)  birth_of_the_bab(year)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/bahai_new_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Baháʼí holidays — bahai_new_year","text":"year year Gregorian calendar","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/bahai_new_year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Baháʼí holidays — bahai_new_year","text":"vector dates Gregorian calendar","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/calcal/reference/bahai_new_year.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Baháʼí holidays — bahai_new_year","text":"","code":"tibble::tibble(   year = 2025:2030,   new_year = bahai_new_year(year),   naw_ruz =naw_ruz(year),   ridvan = feast_of_ridvan(year),   birth_bab = birth_of_the_bab(year) ) #> # A tibble: 6 × 5 #>    year    new_year     naw_ruz      ridvan   birth_bab #>   <int>       <Gre>       <Gre>       <Gre>       <Gre> #> 1  2025 2025-Mar-21 2025-Mar-20 2025-Apr-20 2025-Oct-22 #> 2  2026 2026-Mar-21 2026-Mar-20 2026-Apr-20 2026-Nov-10 #> 3  2027 2027-Mar-21 2027-Mar-21 2027-Apr-21 2027-Oct-30 #> 4  2028 2028-Mar-21 2028-Mar-20 2028-Apr-20 2028-Oct-19 #> 5  2029 2029-Mar-21 2029-Mar-20 2029-Apr-20 2029-Nov-07 #> 6  2030 2030-Mar-21 2030-Mar-20 2030-Apr-20 2030-Oct-28"},{"path":"https://pkg.robjhyndman.com/calcal/reference/balinese_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Balinese Pawukon calendar dates — balinese_date","title":"Balinese Pawukon calendar dates — balinese_date","text":"Balinese calendar repeats every 210 days. 10 concurrent weeks, lengths 1, 2, ..., 10 days. 210 day cycles unnumbered, way convert Balinese date unique date another calendar.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/balinese_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Balinese Pawukon calendar dates — balinese_date","text":"","code":"balinese_date(   luang = integer(),   dwiwara = integer(),   triwara = integer(),   caturwara = integer(),   pancawara = integer(),   sadwara = integer(),   saptawara = integer(),   asatawara = integer(),   sangawara = integer(),   dasawara = integer() )  as_balinese(date)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/balinese_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Balinese Pawukon calendar dates — balinese_date","text":"luang numeric vector dwiwara numeric vector triwara numeric vector caturwara numeric vector pancawara numeric vector sadwara numeric vector saptawara numeric vector asatawara numeric vector sangawara numeric vector dasawara numeric vector date vector dates calendar.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/balinese_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Balinese Pawukon calendar dates — balinese_date","text":"balinese vector object","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/calcal/reference/balinese_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Balinese Pawukon calendar dates — balinese_date","text":"","code":"gregorian_date(2025,6,1:10) |>   as_balinese() #> <bali[10]> #>  [1] TRUE-02-02-03-04-05-01-07-02-00  FALSE-01-03-04-05-06-02-08-03-03 #>  [3] FALSE-01-01-01-01-01-03-01-04-09 FALSE-01-02-02-02-02-04-02-05-07 #>  [5] TRUE-02-03-03-03-03-05-03-06-06  FALSE-01-01-04-04-04-06-04-07-01 #>  [7] TRUE-02-02-01-05-05-07-05-08-08  FALSE-01-03-02-01-06-01-06-09-01 #>  [9] TRUE-02-01-03-02-01-02-07-01-04  FALSE-01-02-04-03-02-03-08-02-01"},{"path":"https://pkg.robjhyndman.com/calcal/reference/calcal-package.html","id":null,"dir":"Reference","previous_headings":"","what":"calcal: Calendrical Calculations — calcal-package","title":"calcal: Calendrical Calculations — calcal-package","text":"R implementation algorithms described Reingold Dershowitz (4th ed., Cambridge University Press, 2018) doi:10.1017/9781107415058 .","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/calcal/reference/calcal-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"calcal: Calendrical Calculations — calcal-package","text":"Maintainer: Rob Hyndman Rob.Hyndman@monash.edu (ORCID) contributors: Edward Reingold (Original Lisp code) [copyright holder, contributor] Nachum Dershowitz (Original Lisp code) [copyright holder, contributor]","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/calcal-vctrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal vctrs methods — calcal-vctrs","title":"Internal vctrs methods — calcal-vctrs","text":"Internal vctrs methods","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/chinese.html","id":null,"dir":"Reference","previous_headings":"","what":"Chinese, Japanese, Korean and Vietnamese calendar dates — chinese_date","title":"Chinese, Japanese, Korean and Vietnamese calendar dates — chinese_date","text":"traditional Chinese lunisolar calendar uses 60-year cycle 12 months per year. Japanese, Korean Vietnamese calendars almost identical, different locations determining astronomical positions.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/chinese.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chinese, Japanese, Korean and Vietnamese calendar dates — chinese_date","text":"","code":"chinese_date(   cycle = integer(),   year = integer(),   month = integer(),   leap_month = logical(),   day = integer() )  japanese_date(   cycle = integer(),   year = integer(),   month = integer(),   leap_month = logical(),   day = integer() )  korean_date(   year = integer(),   month = integer(),   leap_month = logical(),   day = integer() )  vietnamese_date(   cycle = integer(),   year = integer(),   month = integer(),   leap_month = logical(),   day = integer() )  as_chinese(date)  as_japanese(date)  as_korean(date)  as_vietnamese(date)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/chinese.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chinese, Japanese, Korean and Vietnamese calendar dates — chinese_date","text":"cycle numeric vector cycles year numeric vector years within cycles month numeric vector months leap_month logical vector indicating leap months day numeric vector days date numeric vector dates","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/chinese.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Chinese, Japanese, Korean and Vietnamese calendar dates — chinese_date","text":"chinese vector object","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/calcal/reference/chinese.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Chinese, Japanese, Korean and Vietnamese calendar dates — chinese_date","text":"","code":"chinese <- new_date(   cycle = 78, year = 42, month = 5, leap_month = FALSE, day = 16:18,   calendar = cal_chinese ) chinese #> <chinese[3]> #> [1] 78-42-05-16 78-42-05-17 78-42-05-18 chinese_date(78, 42, 5, FALSE, 16:18) #> <chinese[3]> #> [1] 78-42-05-16 78-42-05-17 78-42-05-18 as_date(chinese, calendar = cal_gregorian) #> <gregorian[3]> #> [1] 2025-Jun-11 2025-Jun-12 2025-Jun-13 as_date(Sys.Date(), calendar = cal_chinese) #> <chinese[1]> #> [1] 78-42-06-22 tibble::tibble(   gregorian = gregorian_date(2025, 1, 1) + 0:364,   chinese = as_chinese(gregorian) ) #> # A tibble: 365 × 2 #>      gregorian     chinese #>          <Gre>       <Chi> #>  1 2025-Jan-01 78-41-12-02 #>  2 2025-Jan-02 78-41-12-03 #>  3 2025-Jan-03 78-41-12-04 #>  4 2025-Jan-04 78-41-12-05 #>  5 2025-Jan-05 78-41-12-06 #>  6 2025-Jan-06 78-41-12-07 #>  7 2025-Jan-07 78-41-12-08 #>  8 2025-Jan-08 78-41-12-09 #>  9 2025-Jan-09 78-41-12-10 #> 10 2025-Jan-10 78-41-12-11 #> # ℹ 355 more rows as_gregorian(chinese_date(78, 41, 12, FALSE, 3:30)) #> <gregorian[28]> #>  [1] 2025-Jan-02 2025-Jan-03 2025-Jan-04 2025-Jan-05 2025-Jan-06 2025-Jan-07 #>  [7] 2025-Jan-08 2025-Jan-09 2025-Jan-10 2025-Jan-11 2025-Jan-12 2025-Jan-13 #> [13] 2025-Jan-14 2025-Jan-15 2025-Jan-16 2025-Jan-17 2025-Jan-18 2025-Jan-19 #> [19] 2025-Jan-20 2025-Jan-21 2025-Jan-22 2025-Jan-23 2025-Jan-24 2025-Jan-25 #> [25] 2025-Jan-26 2025-Jan-27 2025-Jan-28 2025-Jan-29 as_chinese(gregorian_date(2025, 1, 1:28)) #> <chinese[28]> #>  [1] 78-41-12-02 78-41-12-03 78-41-12-04 78-41-12-05 78-41-12-06 78-41-12-07 #>  [7] 78-41-12-08 78-41-12-09 78-41-12-10 78-41-12-11 78-41-12-12 78-41-12-13 #> [13] 78-41-12-14 78-41-12-15 78-41-12-16 78-41-12-17 78-41-12-18 78-41-12-19 #> [19] 78-41-12-20 78-41-12-21 78-41-12-22 78-41-12-23 78-41-12-24 78-41-12-25 #> [25] 78-41-12-26 78-41-12-27 78-41-12-28 78-41-12-29 as_chinese(\"2016-01-01\") #> <chinese[1]> #> [1] 78-32-11-22 as_chinese(Sys.Date()) #> <chinese[1]> #> [1] 78-42-06-22"},{"path":"https://pkg.robjhyndman.com/calcal/reference/chinese_new_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Chinese holidays — chinese_new_year","title":"Chinese holidays — chinese_new_year","text":"Dates returned Gregorian dates","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/chinese_new_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chinese holidays — chinese_new_year","text":"","code":"chinese_new_year(year)  dragon_festival(year)  qing_ming(year)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/chinese_new_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chinese holidays — chinese_new_year","text":"year year Gregorian calendar","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/chinese_new_year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Chinese holidays — chinese_new_year","text":"vector dates Gregorian calendar","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/calcal/reference/chinese_new_year.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Chinese holidays — chinese_new_year","text":"","code":"tibble::tibble(   year = 2025:2030,   cny = chinese_new_year(year),   qm = qing_ming(year),   dbf = dragon_festival(year) ) #> # A tibble: 6 × 4 #>    year         cny          qm         dbf #>   <int>       <Gre>       <Gre>       <Gre> #> 1  2025 2025-Jan-29 2025-Apr-04 2025-May-31 #> 2  2026 2026-Feb-17 2026-Apr-05 2026-Jun-19 #> 3  2027 2027-Feb-06 2027-Apr-05 2027-Jun-09 #> 4  2028 2028-Jan-26 2028-Apr-04 2028-May-28 #> 5  2029 2029-Feb-13 2029-Apr-04 2029-Jun-16 #> 6  2030 2030-Feb-03 2030-Apr-05 2030-Jun-05"},{"path":"https://pkg.robjhyndman.com/calcal/reference/christian.html","id":null,"dir":"Reference","previous_headings":"","what":"Christian Ecclesiastical Holidays — advent","title":"Christian Ecclesiastical Holidays — advent","text":"Functions return Gregorian dates various Christian ecclesiastical holidays special days Coptic Christmas celebrated 29th Koiak Coptic calendar, currently corresponds 7 8 January Gregorian calendar.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/christian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Christian Ecclesiastical Holidays — advent","text":"","code":"advent(year)  christmas(year)  orthodox_christmas(year)  epiphany(year)  easter(year)  orthodox_easter(year)  pentecost(year)  coptic_christmas(year)  astronomical_easter(year)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/christian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Christian Ecclesiastical Holidays — advent","text":"year Gregorian year","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/christian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Christian Ecclesiastical Holidays — advent","text":"vector dates Gregorian calendar","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/christian.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Christian Ecclesiastical Holidays — advent","text":"","code":"tibble::tibble(   year = 2025:2030,   advent = advent(year),   christmas = christmas(year),   orthodox_christmas = orthodox_christmas(year),   epiphany = epiphany(year),   easter = easter(year),   orthodox_easter = orthodox_easter(year),   pentecost = pentecost(year) ) #> # A tibble: 6 × 8 #>    year      advent   christmas orthodox_christmas    epiphany      easter #>   <int>       <Gre>       <Gre>              <Gre>       <Gre>       <Gre> #> 1  2025 2025-Nov-30 2025-Dec-25        2025-Jan-07 2025-Jan-05 2025-Apr-20 #> 2  2026 2026-Nov-29 2026-Dec-25        2026-Jan-07 2026-Jan-04 2026-Apr-05 #> 3  2027 2027-Nov-28 2027-Dec-25        2027-Jan-07 2027-Jan-03 2027-Mar-28 #> 4  2028 2028-Dec-03 2028-Dec-25        2028-Jan-07 2028-Jan-02 2028-Apr-16 #> 5  2029 2029-Dec-02 2029-Dec-25        2029-Jan-07 2029-Jan-07 2029-Apr-01 #> 6  2030 2030-Dec-01 2030-Dec-25        2030-Jan-07 2030-Jan-06 2030-Apr-21 #> # ℹ 2 more variables: orthodox_easter <Gre>, pentecost <Gre>"},{"path":"https://pkg.robjhyndman.com/calcal/reference/coptic.html","id":null,"dir":"Reference","previous_headings":"","what":"Coptic and Ethoiopic calendar dates — coptic_date","title":"Coptic and Ethoiopic calendar dates — coptic_date","text":"two calendars identical apart starting point epoch. Coptic calendar (also called Alexandrian calendar) starts 29 August 284 CE Julian calendar, Ethiopic (Ethiopian) calendar starts 29 August 8 CE Julian calendar. Coptic calendar used Coptic Orthodox Coptic Catholic Churches, Ethiopic calendar official state calendar Ethiopia, unofficial calendar Eritrea, used Ethiopian Eritrean Orthodox Churches. calendars 13 months, 12 months 30 days 13th month 5 6 days depending whether leap year. Leap years occur every 4 years.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/coptic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coptic and Ethoiopic calendar dates — coptic_date","text":"","code":"coptic_date(year = integer(), month = integer(), day = integer())  ethiopic_date(year = integer(), month = integer(), day = integer())  as_coptic(date)  as_ethiopic(date)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/coptic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coptic and Ethoiopic calendar dates — coptic_date","text":"year numeric vector years month numeric vector months day numeric vector days date numeric vector dates","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/coptic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coptic and Ethoiopic calendar dates — coptic_date","text":"coptic ethiopic vector object","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/calcal/reference/coptic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coptic and Ethoiopic calendar dates — coptic_date","text":"","code":"tibble::tibble(   gregorian = gregorian_date(2025, 1, 1:31),   coptic = as_coptic(gregorian),   ethiopic = as_ethiopic(gregorian) ) #> # A tibble: 31 × 3 #>      gregorian      coptic     ethiopic #>          <Gre>       <Cop>        <Eth> #>  1 2025-Jan-01 1741-Koi-23 2017-Takh-23 #>  2 2025-Jan-02 1741-Koi-24 2017-Takh-24 #>  3 2025-Jan-03 1741-Koi-25 2017-Takh-25 #>  4 2025-Jan-04 1741-Koi-26 2017-Takh-26 #>  5 2025-Jan-05 1741-Koi-27 2017-Takh-27 #>  6 2025-Jan-06 1741-Koi-28 2017-Takh-28 #>  7 2025-Jan-07 1741-Koi-29 2017-Takh-29 #>  8 2025-Jan-08 1741-Koi-30 2017-Takh-30 #>  9 2025-Jan-09 1741-Tob-01  2017-Ter-01 #> 10 2025-Jan-10 1741-Tob-02  2017-Ter-02 #> # ℹ 21 more rows coptic_date(1741, 5, 16:18) #> <coptic[3]> #> [1] 1741-Tob-16 1741-Tob-17 1741-Tob-18 as_date(Sys.Date(), calendar = cal_ethiopic) #> <ethiopic[1]> #> [1] 2017-Ham-09 as_coptic(\"2016-01-01\") #> <coptic[1]> #> [1] 1732-Koi-22 as_ethiopic(Sys.Date()) #> <ethiopic[1]> #> [1] 2017-Ham-09"},{"path":"https://pkg.robjhyndman.com/calcal/reference/diwali.html","id":null,"dir":"Reference","previous_headings":"","what":"Hindu holidays and special days — hindu_lunar_new_year","title":"Hindu holidays and special days — hindu_lunar_new_year","text":"Functions return Gregorian dates various Hindu holidays based Hindu calendars. Hindu Lunar New Year first day lunar month Caitra (month 1). Birthday Rama 8th 9th day first month (Caitra). Diwali new moon day month Kartik (month 8). Great Night Shiva end 11 month Magha. Mesha Sankranti day sun enters sign Aries (Mesha). Sacred Wednesdays 8th day lunar month falls Wednesday. Dates may vary day two due variations lunar calendar local traditions.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/diwali.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hindu holidays and special days — hindu_lunar_new_year","text":"","code":"hindu_lunar_new_year(year)  mesha_sankranti(year)  diwali(year)  shiva(year)  rama(year)  sacred_wednesdays(year)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/diwali.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hindu holidays and special days — hindu_lunar_new_year","text":"year numeric vector Gregorian years","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/diwali.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hindu holidays and special days — hindu_lunar_new_year","text":"vector dates Gregorian calendar","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/calcal/reference/diwali.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hindu holidays and special days — hindu_lunar_new_year","text":"","code":"shiva(2025:2026) #> <gregorian[2]> #> [1] 2025-Feb-27 2026-Feb-16 hindu_lunar_new_year(2025:2026) #> <gregorian[2]> #> [1] 2025-Mar-30 2026-Mar-19 rama(2025:2026) #> <gregorian[2]> #> [1] 2025-Apr-06 2026-Mar-27 mesha_sankranti(2025:2026) #> <gregorian[2]> #> [1] 2025-Apr-14 2026-Apr-14 diwali(2025:2026) #> <gregorian[2]> #> [1] 2025-Oct-22 2026-Nov-10 sacred_wednesdays(2025:2026) #> <gregorian[3]> #> [1] 2025-Feb-05 2025-Oct-29 2026-Jul-22"},{"path":"https://pkg.robjhyndman.com/calcal/reference/egyptian.html","id":null,"dir":"Reference","previous_headings":"","what":"Egyptian and Armenian calendar dates — egyptian_date","title":"Egyptian and Armenian calendar dates — egyptian_date","text":"ancient Egyptian calendar 365-day solar calendar 12 months 30 days , plus 13th month 5 days. Armenian calendar similar different epoch month names.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/egyptian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Egyptian and Armenian calendar dates — egyptian_date","text":"","code":"egyptian_date(year = integer(), month = integer(), day = integer())  armenian_date(year = integer(), month = integer(), day = integer())  as_egyptian(date)  as_armenian(date)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/egyptian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Egyptian and Armenian calendar dates — egyptian_date","text":"year Numeric vector years month Numeric vector months day Numeric vector days date Vector dates calendar","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/egyptian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Egyptian and Armenian calendar dates — egyptian_date","text":"egyptian armenian vector object","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/egyptian.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Egyptian and Armenian calendar dates — egyptian_date","text":"","code":"tibble::tibble(   gregorian = gregorian_date(2025, 5, 1:10),   egyptian = as_egyptian(gregorian),   armenian = as_armenian(gregorian) ) #> # A tibble: 10 × 3 #>      gregorian     egyptian     armenian #>          <Gre>        <Egy>        <Arm> #>  1 2025-May-01 2774-Thot-15 1474-Mare-15 #>  2 2025-May-02 2774-Thot-16 1474-Mare-16 #>  3 2025-May-03 2774-Thot-17 1474-Mare-17 #>  4 2025-May-04 2774-Thot-18 1474-Mare-18 #>  5 2025-May-05 2774-Thot-19 1474-Mare-19 #>  6 2025-May-06 2774-Thot-20 1474-Mare-20 #>  7 2025-May-07 2774-Thot-21 1474-Mare-21 #>  8 2025-May-08 2774-Thot-22 1474-Mare-22 #>  9 2025-May-09 2774-Thot-23 1474-Mare-23 #> 10 2025-May-10 2774-Thot-24 1474-Mare-24"},{"path":"https://pkg.robjhyndman.com/calcal/reference/french_date.html","id":null,"dir":"Reference","previous_headings":"","what":"French Revolutionary calendar dates — french_date","title":"French Revolutionary calendar dates — french_date","text":"two versions French Revolutionary Calendar. original version, used 1793, kept sync solar year setting first day Vendemiaire autumnal equinox. second version, proposed 1795, simpler arithmetic calendar, never used. distinguish two using \"afrench\" (Arithmetic French) second form.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/french_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"French Revolutionary calendar dates — french_date","text":"","code":"french_date(year = integer(), month = integer(), day = integer())  afrench_date(year = integer(), month = integer(), day = integer())  as_french(date)  as_afrench(date)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/french_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"French Revolutionary calendar dates — french_date","text":"year year month month day day date vector dates calendar","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/french_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"French Revolutionary calendar dates — french_date","text":"vector dates French Revolutionary calendar","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/french_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"French Revolutionary calendar dates — french_date","text":"","code":"french_date(1, 1, 1:15) |>   as_gregorian() #> <gregorian[15]> #>  [1] 1792-Sep-22 1792-Sep-23 1792-Sep-24 1792-Sep-25 1792-Sep-26 1792-Sep-27 #>  [7] 1792-Sep-28 1792-Sep-29 1792-Sep-30 1792-Oct-01 1792-Oct-02 1792-Oct-03 #> [13] 1792-Oct-04 1792-Oct-05 1792-Oct-06 french_date(1, 1, 1:15) |>   day_of_week() #>  [1] \"Primidi\"  \"Duodi\"    \"Tridi\"    \"Quartidi\" \"Quintidi\" \"Sextidi\"  #>  [7] \"Septidi\"  \"Octidi\"   \"Nonidi\"   \"Decadi\"   \"Primidi\"  \"Duodi\"    #> [13] \"Tridi\"    \"Quartidi\" \"Quintidi\""},{"path":"https://pkg.robjhyndman.com/calcal/reference/granularities.html","id":null,"dir":"Reference","previous_headings":"","what":"Canonical granularities — granularity_names","title":"Canonical granularities — granularity_names","text":"granularities() return character vector canonical granularity names relevant calendar. granularities used define dates calendar. granularity() return vector numerical values given canonical granularity.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/granularities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Canonical granularities — granularity_names","text":"","code":"granularity_names(calendar)  granularity(date, granularity)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/granularities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Canonical granularities — granularity_names","text":"calendar calcal object defining calendar. date date vector calendar granularity character string indicating granularity extract","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/granularities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Canonical granularities — granularity_names","text":"character vector granularity names vector numerical values specified granularity.","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/calcal/reference/granularities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Canonical granularities — granularity_names","text":"","code":"granularity_names(cal_iso) #> [1] \"year\" \"week\" \"day\"  granularity_names(cal_gregorian) #> [1] \"year\"  \"month\" \"day\"   date_iso <- new_date(year = 2025, week = 23, day = 2, calendar = cal_iso) granularity(date_iso, \"week\") #> [1] 23 date_gregorian <- new_date(year = 2025, month = 1, day = 1, calendar = cal_gregorian) granularity(date_gregorian, \"month\") #> [1] 1"},{"path":"https://pkg.robjhyndman.com/calcal/reference/gregorian-parts.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute granularities from dates — day_of_week","title":"Compute granularities from dates — day_of_week","text":"Compute days, weeks, months vector dates. work Gregorian dates, calendars makes sense. particular, day_of_week implemented many calendars contain concept week. Similarly, day_of_month, day_of_year days_remaining work several calendars.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/gregorian-parts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute granularities from dates — day_of_week","text":"","code":"day_of_week(date, ...)  day_of_month(date)  day_of_year(date)  days_remaining(date)  week_of_month(date, first_day = \"Monday\")  week_of_year(date, first_day = \"Monday\")  month_of_year(date)  year(date)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/gregorian-parts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute granularities from dates — day_of_week","text":"date vector dates ... arguments used specific calendars first_day Character denoting first day week. Default \"Monday\"","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/gregorian-parts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute granularities from dates — day_of_week","text":"vector numerical values requested granularity. case day_of_week(), returns character vector name day week, numeric vector numeric = TRUE specified.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/gregorian-parts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute granularities from dates — day_of_week","text":"week_of_year() returns ISO 8601 week number first_day Monday. standard, week 1 year defined first week least 4 days year; equivalently, week  containing 4 January. week 0; instead week 1 year may begin previous calendar year. week_of_month() defined analogously week 1 month first week least 4 days month; equivalently, week containing 4th day month. week 0; instead week 1 month may begin previous calendar month. days_remaining() returns number days remaining year. functions self-explanatory.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/gregorian-parts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute granularities from dates — day_of_week","text":"","code":"april2025 <- gregorian_date(2025, 4, 1:30) day_of_week(april2025) #>  [1] \"Tuesday\"   \"Wednesday\" \"Thursday\"  \"Friday\"    \"Saturday\"  \"Sunday\"    #>  [7] \"Monday\"    \"Tuesday\"   \"Wednesday\" \"Thursday\"  \"Friday\"    \"Saturday\"  #> [13] \"Sunday\"    \"Monday\"    \"Tuesday\"   \"Wednesday\" \"Thursday\"  \"Friday\"    #> [19] \"Saturday\"  \"Sunday\"    \"Monday\"    \"Tuesday\"   \"Wednesday\" \"Thursday\"  #> [25] \"Friday\"    \"Saturday\"  \"Sunday\"    \"Monday\"    \"Tuesday\"   \"Wednesday\" day_of_month(april2025) #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #> [26] 26 27 28 29 30 day_of_year(april2025) #>  [1]  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107 108 109 #> [20] 110 111 112 113 114 115 116 117 118 119 120 days_remaining(april2025) #>  [1] 274 273 272 271 270 269 268 267 266 265 264 263 262 261 260 259 258 257 256 #> [20] 255 254 253 252 251 250 249 248 247 246 245 week_of_month(april2025) #>  [1] 1 1 1 1 1 1 2 2 2 2 2 2 2 3 3 3 3 3 3 3 4 4 4 4 4 4 4 1 1 1 week_of_year(april2025) #>  [1] 14 14 14 14 14 14 15 15 15 15 15 15 15 16 16 16 16 16 16 16 17 17 17 17 17 #> [26] 17 17 18 18 18 month_of_year(april2025) #>  [1] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4"},{"path":"https://pkg.robjhyndman.com/calcal/reference/gregorian.html","id":null,"dir":"Reference","previous_headings":"","what":"Gregorian calendar dates — gregorian_date","title":"Gregorian calendar dates — gregorian_date","text":"Gregorian calendar standard calendar used world. named Pope Gregory XIII introduced 1582. modification Julian calendar use time.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/gregorian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gregorian calendar dates — gregorian_date","text":"","code":"gregorian_date(year = integer(), month = integer(), day = integer())  as_gregorian(date)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/gregorian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gregorian calendar dates — gregorian_date","text":"year numeric vector years month numeric vector months day numeric vector days date Vector dates calendar","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/gregorian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gregorian calendar dates — gregorian_date","text":"gregorian vector object","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/calcal/reference/gregorian.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gregorian calendar dates — gregorian_date","text":"","code":"new_date(year = 2025, month = 3, day = 2:4, calendar = cal_gregorian) #> <gregorian[3]> #> [1] 2025-Mar-02 2025-Mar-03 2025-Mar-04 gregorian_date(2025, 4, 19:30) #> <gregorian[12]> #>  [1] 2025-Apr-19 2025-Apr-20 2025-Apr-21 2025-Apr-22 2025-Apr-23 2025-Apr-24 #>  [7] 2025-Apr-25 2025-Apr-26 2025-Apr-27 2025-Apr-28 2025-Apr-29 2025-Apr-30 as_date(Sys.Date(), calendar = cal_gregorian) #> <gregorian[1]> #> [1] 2025-Jul-16 as_gregorian(Sys.Date()) #> <gregorian[1]> #> [1] 2025-Jul-16 as_gregorian(\"2016-01-01\") #> <gregorian[1]> #> [1] 2016-Jan-01 tibble::tibble(   x = seq(as.Date(\"2025-01-01\"), as.Date(\"2025-12-31\"), by = \"day\"),   y = as_gregorian(x),   z = as_date(x, calendar = cal_gregorian) ) #> # A tibble: 365 × 3 #>    x                    y           z #>    <date>           <Gre>       <Gre> #>  1 2025-01-01 2025-Jan-01 2025-Jan-01 #>  2 2025-01-02 2025-Jan-02 2025-Jan-02 #>  3 2025-01-03 2025-Jan-03 2025-Jan-03 #>  4 2025-01-04 2025-Jan-04 2025-Jan-04 #>  5 2025-01-05 2025-Jan-05 2025-Jan-05 #>  6 2025-01-06 2025-Jan-06 2025-Jan-06 #>  7 2025-01-07 2025-Jan-07 2025-Jan-07 #>  8 2025-01-08 2025-Jan-08 2025-Jan-08 #>  9 2025-01-09 2025-Jan-09 2025-Jan-09 #> 10 2025-01-10 2025-Jan-10 2025-Jan-10 #> # ℹ 355 more rows"},{"path":"https://pkg.robjhyndman.com/calcal/reference/hebrew.html","id":null,"dir":"Reference","previous_headings":"","what":"Hebrew calendar dates — hebrew_date","title":"Hebrew calendar dates — hebrew_date","text":"Hebrew (Jewish) calendar official calendar Israel, used Jewish religious holidays. lunisolar calendar comprising months 29 30 days, begin end approximately time new moon. extra lunar month added every 2 3 years, calendar either 12 13 months per year.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/hebrew.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hebrew calendar dates — hebrew_date","text":"","code":"hebrew_date(year = integer(), month = integer(), day = integer())  as_hebrew(date)  ohebrew_date(year = integer(), month = integer(), day = integer())  as_ohebrew(date)  samaritan_date(year = integer(), month = integer(), day = integer())  as_samaritan(date)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/hebrew.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hebrew calendar dates — hebrew_date","text":"year numeric vector years month numeric vector months day numeric vector days date Vector dates calendar","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/hebrew.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hebrew calendar dates — hebrew_date","text":"hebrew vector object","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/hebrew.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Hebrew calendar dates — hebrew_date","text":"observational Hebrew calendar (\"ohebrew\") classical calendar new month began reported observation crescent new moon. implementation, Haifa taken point observation. Samaritan calendar similar, moment new moon marking start new month based traditional reckoning lunar cycle,","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/calcal/reference/hebrew.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hebrew calendar dates — hebrew_date","text":"","code":"heb <- new_date(year = 5785, month = 3, day = 2:4, calendar = cal_hebrew) heb #> <hebrew[3]> #> [1] 5785-Sivan-02 5785-Sivan-03 5785-Sivan-04 hebrew_date(5785, 3, 2:4) #> <hebrew[3]> #> [1] 5785-Sivan-02 5785-Sivan-03 5785-Sivan-04 as_date(heb, calendar = cal_gregorian) #> <gregorian[3]> #> [1] 2025-May-29 2025-May-30 2025-May-31 as_date(Sys.Date(), calendar = cal_hebrew) #> <hebrew[1]> #> [1] 5785-Tammuz-20 tibble::tibble(   gregorian = gregorian_date(2025, 1, 1) + 0:364,   hebrew = as_date(gregorian, calendar = cal_hebrew), ) #> # A tibble: 365 × 2 #>      gregorian        hebrew #>          <Gre>         <Heb> #>  1 2025-Jan-01 5785-Tevet-01 #>  2 2025-Jan-02 5785-Tevet-02 #>  3 2025-Jan-03 5785-Tevet-03 #>  4 2025-Jan-04 5785-Tevet-04 #>  5 2025-Jan-05 5785-Tevet-05 #>  6 2025-Jan-06 5785-Tevet-06 #>  7 2025-Jan-07 5785-Tevet-07 #>  8 2025-Jan-08 5785-Tevet-08 #>  9 2025-Jan-09 5785-Tevet-09 #> 10 2025-Jan-10 5785-Tevet-10 #> # ℹ 355 more rows as_gregorian(hebrew_date(5785, 3, 2:4)) #> <gregorian[3]> #> [1] 2025-May-29 2025-May-30 2025-May-31 as_hebrew(gregorian_date(2025, 1, 1:31)) #> <hebrew[31]> #>  [1] 5785-Tevet-01  5785-Tevet-02  5785-Tevet-03  5785-Tevet-04  5785-Tevet-05  #>  [6] 5785-Tevet-06  5785-Tevet-07  5785-Tevet-08  5785-Tevet-09  5785-Tevet-10  #> [11] 5785-Tevet-11  5785-Tevet-12  5785-Tevet-13  5785-Tevet-14  5785-Tevet-15  #> [16] 5785-Tevet-16  5785-Tevet-17  5785-Tevet-18  5785-Tevet-19  5785-Tevet-20  #> [21] 5785-Tevet-21  5785-Tevet-22  5785-Tevet-23  5785-Tevet-24  5785-Tevet-25  #> [26] 5785-Tevet-26  5785-Tevet-27  5785-Tevet-28  5785-Tevet-29  5785-Shevat-01 #> [31] 5785-Shevat-02 as_hebrew(\"2016-01-01\") #> <hebrew[1]> #> [1] 5776-Tevet-20 as_hebrew(Sys.Date()) #> <hebrew[1]> #> [1] 5785-Tammuz-20 hebrew_date(5785, 3, 1:10) |> day_of_week() #>  [1] \"Revii\"   \"Hamishi\" \"Shishi\"  \"Shabbat\" \"Rishon\"  \"Sheni\"   \"Shlishi\" #>  [8] \"Revii\"   \"Hamishi\" \"Shishi\""},{"path":"https://pkg.robjhyndman.com/calcal/reference/hindu_solar_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Hindu solar and lunar calendar dates — hindu_solar_date","title":"Hindu solar and lunar calendar dates — hindu_solar_date","text":"four Hindu calendars implemented: modern Hindu solar lunar calendars, old Hindu solar lunar calendars. Hindu solar months 1/12 solar year (approximately 30.44 days), lunar months based lunar cycle (approximately 29.53 days).","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/hindu_solar_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hindu solar and lunar calendar dates — hindu_solar_date","text":"","code":"hindu_solar_date(year, month, day)  hindu_lunar_date(year, month, leap_month, day, leap_day)  as_hindu_solar(date)  as_hindu_lunar(date)  old_hindu_solar_date(year = integer(), month = integer(), day = integer())  old_hindu_lunar_date(   year = integer(),   month = integer(),   leap_month = logical(),   day = integer() )  as_old_hindu_solar(date)  as_old_hindu_lunar(date)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/hindu_solar_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hindu solar and lunar calendar dates — hindu_solar_date","text":"year numeric vector years month numeric vector months day numeric vector days leap_month logical vector indicating year leap year leap_day logical vector indicating day leap day date date vector calendar","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/hindu_solar_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hindu solar and lunar calendar dates — hindu_solar_date","text":"vector object Hindu dates.","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/calcal/reference/hindu_solar_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hindu solar and lunar calendar dates — hindu_solar_date","text":"","code":"gregorian_date(2025, 1, 1:31) |>   as_hindu_solar() #> <hindu_solar[31]> #>  [1] 1946-Dhan-18 1946-Dhan-19 1946-Dhan-20 1946-Dhan-21 1946-Dhan-22 #>  [6] 1946-Dhan-23 1946-Dhan-24 1946-Dhan-25 1946-Dhan-26 1946-Dhan-27 #> [11] 1946-Dhan-28 1946-Dhan-29 1946-Dhan-30 1946-Maka-01 1946-Maka-02 #> [16] 1946-Maka-03 1946-Maka-04 1946-Maka-05 1946-Maka-06 1946-Maka-07 #> [21] 1946-Maka-08 1946-Maka-09 1946-Maka-10 1946-Maka-11 1946-Maka-12 #> [26] 1946-Maka-13 1946-Maka-14 1946-Maka-15 1946-Maka-16 1946-Maka-17 #> [31] 1946-Maka-18 gregorian_date(2025, 1, 1:31) |>   as_hindu_lunar() #> <hindu_lunar[31]> #>  [1] 2081-Paus-2   2081-Paus-3   2081-Paus-4   2081-Paus-5   2081-Paus-6   #>  [6] 2081-Paus-7   2081-Paus-8   2081-Paus-9   2081-Paus-10  2081-Paus-11  #> [11] 2081-Paus-12  2081-Paus-14  2081-Paus-15  2081-Paus-16  2081-Paus-17  #> [16] 2081-Paus-18  2081-Paus-19  2081-Paus-20  2081-Paus-21  2081-Paus-21* #> [21] 2081-Paus-22  2081-Paus-23  2081-Paus-24  2081-Paus-25  2081-Paus-26  #> [26] 2081-Paus-27  2081-Paus-28  2081-Paus-29  2081-Paus-30  2081-Magh-1   #> [31] 2081-Magh-2"},{"path":"https://pkg.robjhyndman.com/calcal/reference/icelandic_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Icelandic calendar dates — icelandic_date","title":"Icelandic calendar dates — icelandic_date","text":"Icelandic calendar, still use Iceland, divides times 7-day weeks two seasons: Summer Winter. Summer starts first Thursday April 18th, Winter 180 days earlier. Ordinary years 52 weeks leap years 53 weeks. leap week occurs every 5-7 years midsummer.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/icelandic_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Icelandic calendar dates — icelandic_date","text":"","code":"icelandic_date(   year = integer(),   season = integer(),   week = integer(),   weekday = integer() )  as_icelandic(date)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/icelandic_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Icelandic calendar dates — icelandic_date","text":"year numeric vector years season numeric vector seasons (1 = Summer, 2 = Winter) week numeric vector weeks within season (1 28) weekday number vector containing day week (0 = Sunday, 1 = Monday, ..., 6 = Saturday)) date numeric vector dates","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/icelandic_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Icelandic calendar dates — icelandic_date","text":"icelandic vector object","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/icelandic_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Icelandic calendar dates — icelandic_date","text":"","code":"gregorian_date(2025, 4, 20:30) |>   as_icelandic() #> <icelandic[11]> #>  [1] 2024-Win-26-Sun 2024-Win-26-Mon 2024-Win-26-Tue 2024-Win-26-Wed #>  [5] 2025-Sum-01-Thu 2025-Sum-01-Fri 2025-Sum-01-Sat 2025-Sum-01-Sun #>  [9] 2025-Sum-01-Mon 2025-Sum-01-Tue 2025-Sum-01-Wed icelandic_date(2025, 1, 6, 0:6) |>   day_of_week() #> [1] \"Sunnudagur\"   \"Manudagur\"    \"Þriðjudagur\"  \"Miðvikudagur\" \"Fimmtudagur\"  #> [6] \"Føstudagur\"   \"Laugardagur\""},{"path":"https://pkg.robjhyndman.com/calcal/reference/islamic.html","id":null,"dir":"Reference","previous_headings":"","what":"Islamic calendar dates — islamic_date","title":"Islamic calendar dates — islamic_date","text":"Islamic (Hijri) calendar lunar calendar comprising 12 lunar months year 354 355 days. widely used Islamic holidays, countries predominant religion Islam.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/islamic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Islamic calendar dates — islamic_date","text":"","code":"islamic_date(year = integer(), month = integer(), day = integer())  as_islamic(date)  oislamic_date(year = integer(), month = integer(), day = integer())  as_oislamic(date)  saudi_date(year = integer(), month = integer(), day = integer())  as_saudi(date)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/islamic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Islamic calendar dates — islamic_date","text":"year numeric vector years month numeric vector months day numeric vector days date Vector dates calendar","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/islamic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Islamic calendar dates — islamic_date","text":"islamic vector object","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/islamic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Islamic calendar dates — islamic_date","text":"Three variations implemented . standard Islamic calendar available using as_islamic islamic_date. Saudi Islamic calendar uses as_saudi saudi_date, traditional observational Islamic calendar available using as_oislamic oislamic_date.","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/calcal/reference/islamic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Islamic calendar dates — islamic_date","text":"","code":"islamic_date(2025, 5, 1:30) #> <islamic[30]> #>  [1] 2025-Jum1-01 2025-Jum1-02 2025-Jum1-03 2025-Jum1-04 2025-Jum1-05 #>  [6] 2025-Jum1-06 2025-Jum1-07 2025-Jum1-08 2025-Jum1-09 2025-Jum1-10 #> [11] 2025-Jum1-11 2025-Jum1-12 2025-Jum1-13 2025-Jum1-14 2025-Jum1-15 #> [16] 2025-Jum1-16 2025-Jum1-17 2025-Jum1-18 2025-Jum1-19 2025-Jum1-20 #> [21] 2025-Jum1-21 2025-Jum1-22 2025-Jum1-23 2025-Jum1-24 2025-Jum1-25 #> [26] 2025-Jum1-26 2025-Jum1-27 2025-Jum1-28 2025-Jum1-29 2025-Jum1-30 as_islamic(\"2016-01-01\") #> <islamic[1]> #> [1] 1437-Rab1-20 as_islamic(Sys.Date()) #> <islamic[1]> #> [1] 1447-Muh-20 tibble::tibble(   x = seq(as.Date(\"2025-01-01\"), as.Date(\"2025-12-31\"), by = \"day\"),   y = as_islamic(x) ) #> # A tibble: 365 × 2 #>    x                    y #>    <date>           <Hij> #>  1 2025-01-01 1446-Raj-01 #>  2 2025-01-02 1446-Raj-02 #>  3 2025-01-03 1446-Raj-03 #>  4 2025-01-04 1446-Raj-04 #>  5 2025-01-05 1446-Raj-05 #>  6 2025-01-06 1446-Raj-06 #>  7 2025-01-07 1446-Raj-07 #>  8 2025-01-08 1446-Raj-08 #>  9 2025-01-09 1446-Raj-09 #> 10 2025-01-10 1446-Raj-10 #> # ℹ 355 more rows islamic_date(2025, 5, 1:10) |> day_of_week() #>  [1] \"al-Ithnayn\"   \"ath-Thulatha\" \"al-Arba'a\"    \"al-Khamis\"    \"al-Jumu'ah\"   #>  [6] \"as-Sabt\"      \"al-Ahad\"      \"al-Ithnayn\"   \"ath-Thulatha\" \"al-Arba'a\"    islamic_date(2025, 4, 19:30) #> <islamic[12]> #>  [1] 2025-Rab2-19 2025-Rab2-20 2025-Rab2-21 2025-Rab2-22 2025-Rab2-23 #>  [6] 2025-Rab2-24 2025-Rab2-25 2025-Rab2-26 2025-Rab2-27 2025-Rab2-28 #> [11] 2025-Rab2-29 2025-Jum1-01"},{"path":"https://pkg.robjhyndman.com/calcal/reference/islamic_holidays.html","id":null,"dir":"Reference","previous_headings":"","what":"Islamic holidays — islamic_new_year","title":"Islamic holidays — islamic_new_year","text":"Functions return Gregorian dates various Islamic holidays. Specific dates can vary slightly based moon sightings different regions.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/islamic_holidays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Islamic holidays — islamic_new_year","text":"","code":"islamic_new_year(year)  mawlid(year)  ramadan(year)  eid_al_fitr(year)  eid_al_adha(year)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/islamic_holidays.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Islamic holidays — islamic_new_year","text":"year numeric vector Gregorian years","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/islamic_holidays.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Islamic holidays — islamic_new_year","text":"vector dates Gregorian calendar","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/calcal/reference/islamic_holidays.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Islamic holidays — islamic_new_year","text":"","code":"tibble::tibble(   year = 2025:2029,   `New year` = islamic_new_year(year),   Mawlid = mawlid(year),   Ramadan = ramadan(year),   `Eid al-Fitr` = eid_al_fitr(year),   `Eid al-Adha` = eid_al_adha(year) ) #> # A tibble: 5 × 6 #>    year  `New year`      Mawlid     Ramadan `Eid al-Fitr` `Eid al-Adha` #>   <int>       <Gre>       <Gre>       <Gre>         <Gre>         <Gre> #> 1  2025 2025-Jun-27 2025-Aug-07 2025-Mar-01   2025-Mar-31   2025-Jun-07 #> 2  2026 2026-Jun-17 2026-Jul-28 2026-Feb-18   2026-Mar-20   2026-May-27 #> 3  2027 2027-Jun-06 2027-Jul-17 2027-Feb-08   2027-Mar-10   2027-May-17 #> 4  2028 2028-May-25 2028-Jul-05 2028-Jan-28   2028-Feb-27   2028-May-05 #> 5  2029 2029-May-15 2029-Jun-25 2029-Jan-16   2029-Feb-15   2029-Apr-24 ramadan(2030) #> <gregorian[2]> #> [1] 2030-Jan-06 2030-Dec-26"},{"path":"https://pkg.robjhyndman.com/calcal/reference/iso.html","id":null,"dir":"Reference","previous_headings":"","what":"ISO calendar dates — iso_date","title":"ISO calendar dates — iso_date","text":"ISO 8601 date objects, weeks defined starting Mondays. Week 1 first week least 4 days year. Equivalently, week containing 4 January. week 0; instead week 1 year may begin previous calendar year.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/iso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ISO calendar dates — iso_date","text":"","code":"iso_date(year = integer(), week = integer(), day = integer())  as_iso(date)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/iso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ISO calendar dates — iso_date","text":"year numeric vector years week numeric vector weeks day numeric vector days date Vector dates calendar","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/iso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ISO calendar dates — iso_date","text":"iso vector object","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/iso.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ISO calendar dates — iso_date","text":"flexible week numbering possible using Gregorian dates week_of_year().","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/calcal/reference/iso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ISO calendar dates — iso_date","text":"","code":"iso <- new_date(year = 2025, week = 23, day = 2:4, calendar = cal_iso) iso #> <iso[3]> #> [1] 2025-23-02 2025-23-03 2025-23-04 iso_date(2025, 23, 2:4) #> <iso[3]> #> [1] 2025-23-02 2025-23-03 2025-23-04 as_gregorian(iso_date(2025, 23, 2:4)) #> <gregorian[3]> #> [1] 2025-Jun-03 2025-Jun-04 2025-Jun-05 as_iso(gregorian_date(2025, 1, 1:31)) #> <iso[31]> #>  [1] 2025-01-03 2025-01-04 2025-01-05 2025-01-06 2025-01-07 2025-02-01 #>  [7] 2025-02-02 2025-02-03 2025-02-04 2025-02-05 2025-02-06 2025-02-07 #> [13] 2025-03-01 2025-03-02 2025-03-03 2025-03-04 2025-03-05 2025-03-06 #> [19] 2025-03-07 2025-04-01 2025-04-02 2025-04-03 2025-04-04 2025-04-05 #> [25] 2025-04-06 2025-04-07 2025-05-01 2025-05-02 2025-05-03 2025-05-04 #> [31] 2025-05-05 as_iso(\"2016-01-01\") #> <iso[1]> #> [1] 2015-53-05 as_iso(Sys.Date()) #> <iso[1]> #> [1] 2025-29-03 tibble::tibble(   x = seq(as.Date(\"2025-01-01\"), as.Date(\"2025-12-31\"), by = \"day\"),   y = as_iso(x) ) #> # A tibble: 365 × 2 #>    x                   y #>    <date>          <ISO> #>  1 2025-01-01 2025-01-03 #>  2 2025-01-02 2025-01-04 #>  3 2025-01-03 2025-01-05 #>  4 2025-01-04 2025-01-06 #>  5 2025-01-05 2025-01-07 #>  6 2025-01-06 2025-02-01 #>  7 2025-01-07 2025-02-02 #>  8 2025-01-08 2025-02-03 #>  9 2025-01-09 2025-02-04 #> 10 2025-01-10 2025-02-05 #> # ℹ 355 more rows"},{"path":"https://pkg.robjhyndman.com/calcal/reference/jewish.html","id":null,"dir":"Reference","previous_headings":"","what":"Jewish Holidays — yom_kippur","title":"Jewish Holidays — yom_kippur","text":"Functions return Gregorian dates various Jewish holidays","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/jewish.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Jewish Holidays — yom_kippur","text":"","code":"yom_kippur(year)  passover(year)  purim(year)  ta_anit_esther(year)  tishah_be_av(year)  hanukkah(year)  rosh_hashanah(year)  sukkot(year)  shavuot(year)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/jewish.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Jewish Holidays — yom_kippur","text":"year numeric vector Gregorian years","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/jewish.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Jewish Holidays — yom_kippur","text":"vector dates Gregorian calendar","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/calcal/reference/jewish.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Jewish Holidays — yom_kippur","text":"","code":"tibble::tibble(   year = 2025:2030,   ta_anit_esther = ta_anit_esther(year),   purim = purim(year),   passover = passover(year),   shavuot = shavuot(year),   tishah_be_av = tishah_be_av(year),   rosh_hashanah = rosh_hashanah(year),   yom_kippur = yom_kippur(year),   sukkot = sukkot(year),   hanukkah = hanukkah(year) ) #> # A tibble: 6 × 10 #>    year ta_anit_esther       purim    passover     shavuot tishah_be_av #>   <int>          <Gre>       <Gre>       <Gre>       <Gre>        <Gre> #> 1  2025    2025-Mar-13 2025-Mar-14 2025-Apr-13 2025-Jun-02  2025-Aug-03 #> 2  2026    2026-Mar-02 2026-Mar-03 2026-Apr-02 2026-May-22  2026-Jul-23 #> 3  2027    2027-Mar-22 2027-Mar-23 2027-Apr-22 2027-Jun-11  2027-Aug-12 #> 4  2028    2028-Mar-09 2028-Mar-12 2028-Apr-11 2028-May-31  2028-Aug-01 #> 5  2029    2029-Feb-28 2029-Mar-01 2029-Mar-31 2029-May-20  2029-Jul-22 #> 6  2030    2030-Mar-18 2030-Mar-19 2030-Apr-18 2030-Jun-07  2030-Aug-08 #> # ℹ 4 more variables: rosh_hashanah <Gre>, yom_kippur <Gre>, sukkot <Gre>, #> #   hanukkah <Gre>"},{"path":"https://pkg.robjhyndman.com/calcal/reference/julian.html","id":null,"dir":"Reference","previous_headings":"","what":"Julian calendar dates — julian_date","title":"Julian calendar dates — julian_date","text":"Julian calendar calendar used Roman Empire, takes name Julius Caesar, introduced 46 BC. still used religious calendar parts Eastern Orthodox Church.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/julian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Julian calendar dates — julian_date","text":"","code":"julian_date(year = integer(), month = integer(), day = integer())  as_julian(date)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/julian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Julian calendar dates — julian_date","text":"year numeric vector years month numeric vector months day numeric vector days date Vector dates calendar","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/julian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Julian calendar dates — julian_date","text":"julian vector object","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/calcal/reference/julian.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Julian calendar dates — julian_date","text":"","code":"as_date(\"2016-01-01\", calendar = cal_julian) #> <julian[1]> #> [1] 2015-Dec-19 as_date(Sys.Date(), calendar = cal_julian) #> <julian[1]> #> [1] 2025-Jul-03 tibble::tibble(   x = seq(as.Date(\"2025-01-01\"), as.Date(\"2025-12-31\"), by = \"day\"),   y = as_date(x, calendar = cal_gregorian),   z = as_date(x, calendar = cal_julian) ) #> # A tibble: 365 × 3 #>    x                    y           z #>    <date>           <Gre>       <Jul> #>  1 2025-01-01 2025-Jan-01 2024-Dec-19 #>  2 2025-01-02 2025-Jan-02 2024-Dec-20 #>  3 2025-01-03 2025-Jan-03 2024-Dec-21 #>  4 2025-01-04 2025-Jan-04 2024-Dec-22 #>  5 2025-01-05 2025-Jan-05 2024-Dec-23 #>  6 2025-01-06 2025-Jan-06 2024-Dec-24 #>  7 2025-01-07 2025-Jan-07 2024-Dec-25 #>  8 2025-01-08 2025-Jan-08 2024-Dec-26 #>  9 2025-01-09 2025-Jan-09 2024-Dec-27 #> 10 2025-01-10 2025-Jan-10 2024-Dec-28 #> # ℹ 355 more rows new_date(year = 2025, month = 4, day = 19:30, calendar = cal_julian) #> <julian[12]> #>  [1] 2025-Apr-19 2025-Apr-20 2025-Apr-21 2025-Apr-22 2025-Apr-23 2025-Apr-24 #>  [7] 2025-Apr-25 2025-Apr-26 2025-Apr-27 2025-Apr-28 2025-Apr-29 2025-Apr-30 julian_date(2025, 4, 19:30) #> <julian[12]> #>  [1] 2025-Apr-19 2025-Apr-20 2025-Apr-21 2025-Apr-22 2025-Apr-23 2025-Apr-24 #>  [7] 2025-Apr-25 2025-Apr-26 2025-Apr-27 2025-Apr-28 2025-Apr-29 2025-Apr-30 as_julian(\"2016-01-01\") #> <julian[1]> #> [1] 2015-Dec-19 as_julian(Sys.Date()) #> <julian[1]> #> [1] 2025-Jul-03 tibble::tibble(   x = seq(as.Date(\"2025-01-01\"), as.Date(\"2025-12-31\"), by = \"day\"),   y = as_julian(x) ) #> # A tibble: 365 × 2 #>    x                    y #>    <date>           <Jul> #>  1 2025-01-01 2024-Dec-19 #>  2 2025-01-02 2024-Dec-20 #>  3 2025-01-03 2024-Dec-21 #>  4 2025-01-04 2024-Dec-22 #>  5 2025-01-05 2024-Dec-23 #>  6 2025-01-06 2024-Dec-24 #>  7 2025-01-07 2024-Dec-25 #>  8 2025-01-08 2024-Dec-26 #>  9 2025-01-09 2024-Dec-27 #> 10 2025-01-10 2024-Dec-28 #> # ℹ 355 more rows"},{"path":"https://pkg.robjhyndman.com/calcal/reference/kajeng_keliwon.html","id":null,"dir":"Reference","previous_headings":"","what":"Balinese special days — kajeng_keliwon","title":"Balinese special days — kajeng_keliwon","text":"Find occurrences Kajeng Keliwon Tumpek vector Gregorian years.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/kajeng_keliwon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Balinese special days — kajeng_keliwon","text":"","code":"kajeng_keliwon(year)  tumpek(year)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/kajeng_keliwon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Balinese special days — kajeng_keliwon","text":"year numeric vector Gregorian years","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/kajeng_keliwon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Balinese special days — kajeng_keliwon","text":"vector dates Gregorian calendar","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/calcal/reference/kajeng_keliwon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Balinese special days — kajeng_keliwon","text":"","code":"kajeng_keliwon(2025) #> <gregorian[25]> #>  [1] 2025-Jan-03 2025-Jan-18 2025-Feb-02 2025-Feb-17 2025-Mar-04 2025-Mar-19 #>  [7] 2025-Apr-03 2025-Apr-18 2025-May-03 2025-May-18 2025-Jun-02 2025-Jun-17 #> [13] 2025-Jul-02 2025-Jul-17 2025-Aug-01 2025-Aug-16 2025-Aug-31 2025-Sep-15 #> [19] 2025-Sep-30 2025-Oct-15 2025-Oct-30 2025-Nov-14 2025-Nov-29 2025-Dec-14 #> [25] 2025-Dec-29 tumpek(2025) #> <gregorian[10]> #>  [1] 2025-Jan-18 2025-Feb-22 2025-Mar-29 2025-May-03 2025-Jun-07 2025-Jul-12 #>  [7] 2025-Aug-16 2025-Sep-20 2025-Oct-25 2025-Nov-29"},{"path":"https://pkg.robjhyndman.com/calcal/reference/location.html","id":null,"dir":"Reference","previous_headings":"","what":"Locations — location","title":"Locations — location","text":"Create location object. used calculating timing astronomical events sunrise sunset.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Locations — location","text":"","code":"location(   latitude = numeric(),   longitude = numeric(),   elevation = numeric(),   zone = numeric() )"},{"path":"https://pkg.robjhyndman.com/calcal/reference/location.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Locations — location","text":"latitude numeric vector latitudes longitude numeric vector longitudes elevation numeric vector elevations sea level (metres) zone numeric vector time zones (hours, relative UTC)","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/location.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Locations — location","text":"location vector object","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/location.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Locations — location","text":"","code":"melbourne <- location(-37.8136, 144.9631, 31, 10) sunrise(\"2025-01-01\", melbourne) #> <time_of_day[1]> #> [1] 05:00:25.00"},{"path":"https://pkg.robjhyndman.com/calcal/reference/lunar_phase.html","id":null,"dir":"Reference","previous_headings":"","what":"Lunar phase at date — lunar_phase","title":"Lunar phase at date — lunar_phase","text":"Lunar phase date, angle degrees. angle 0 means new moon, 90 degrees means first quarter, 180 means full moon, 270 degrees means last quarter.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/lunar_phase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lunar phase at date — lunar_phase","text":"","code":"lunar_phase(date)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/lunar_phase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lunar phase at date — lunar_phase","text":"date Date vector","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/lunar_phase.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lunar phase at date — lunar_phase","text":"","code":"april2025 <- gregorian_date(2025, 4, 1:30) lunar_phase(april2025) #>  [1]  35.87571  49.68103  63.14151  76.19938  88.83943 101.08071 112.96536 #>  [8] 124.54784 135.88624 147.03637 158.04870 168.96764 179.83223 190.67757 #> [15] 201.53670 212.44314 223.43391 234.55221 245.84850 257.37951 269.20513 #> [22] 281.38360 293.96466 306.97947 320.42760 334.26406 348.39227   2.66872 #> [29]  16.92140  30.97752"},{"path":"https://pkg.robjhyndman.com/calcal/reference/mayan_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Mayan calendar dates — mayan_date","title":"Mayan calendar dates — mayan_date","text":"three Mayan calendars: famous \"long count\" calendar, \"Haab\" calendar, \"Tzolkin\" calendar. , long count calendar can converted calendars, one implemented .","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/mayan_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mayan calendar dates — mayan_date","text":"","code":"mayan_date(   baktun = integer(),   katun = integer(),   tun = integer(),   uinal = integer(),   kin = integer() )  as_mayan(date)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/mayan_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mayan calendar dates — mayan_date","text":"baktun Numeric vector katun Numeric vector tun Numeric vector uinal Numeric vector kin Numeric vector date Vector dates calendar","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/mayan_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mayan calendar dates — mayan_date","text":"mayan vector object","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/mayan_date.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mayan calendar dates — mayan_date","text":"Mayan long count calendar vigesimal (base-20) calendar five components: kin (1 day), uinal (20 kin), tun (18 uinal), katun (20 tun), baktun (20 katun). full cycle repeats every 20x18x20x20 = 144,000 days (approximately 394 years).","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/calcal/reference/mayan_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mayan calendar dates — mayan_date","text":"","code":"gregorian_date(2012, 12, 10:30) |>   as_mayan() #> <mayan[21]> #>  [1] 12-19-17-19-09 12-19-17-19-10 12-19-17-19-11 12-19-17-19-12 12-19-17-19-13 #>  [6] 12-19-17-19-14 12-19-17-19-15 12-19-17-19-16 12-19-17-19-17 12-19-17-19-18 #> [11] 12-19-17-19-19 13-00-00-00-00 13-00-00-00-01 13-00-00-00-02 13-00-00-00-03 #> [16] 13-00-00-00-04 13-00-00-00-05 13-00-00-00-06 13-00-00-00-07 13-00-00-00-08 #> [21] 13-00-00-00-09"},{"path":"https://pkg.robjhyndman.com/calcal/reference/new_calendar.html","id":null,"dir":"Reference","previous_headings":"","what":"Define calendar objects — new_calendar","title":"Define calendar objects — new_calendar","text":"Generate calendar object class \"calendar\". Examples calendars produced way include cal_chinese, cal_gregorian, cal_hebrew, cal_islamic, cal_iso.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/new_calendar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define calendar objects — new_calendar","text":"","code":"new_calendar(   name,   short_name,   granularities,   validate_granularities,   format,   from_rd,   to_rd )  cal_babylonian  cal_bahai  cal_balinese  cal_chinese  cal_japanese  cal_korean  cal_vietnamese  cal_coptic  cal_ethiopic  cal_egyptian  cal_armenian  cal_french  cal_afrench  cal_gregorian  cal_hebrew  cal_icelandic  cal_islamic  cal_iso  cal_julian  cal_oislamic  cal_saudi  cal_ohebrew  cal_samaritan  cal_mayan  cal_hindu_lunar  cal_hindu_solar  cal_old_hindu_solar  cal_old_hindu_lunar  cal_persian  cal_apersian  cal_roman  cal_tibetan"},{"path":"https://pkg.robjhyndman.com/calcal/reference/new_calendar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define calendar objects — new_calendar","text":"name Name calendar short_name Short name calendar granularities Character vector names granularities calendar (e.g., Gregorian calendar, granularities year, month, day). validate_granularities Function check granularities valid (e.g., Gregorian months 1 12). format Function specify date format character string. from_rd Function convert RD calendar date. to_rd Function convert calendar date RD.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/new_calendar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define calendar objects — new_calendar","text":"calendar object class \"calendar\"","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/new_calendar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define calendar objects — new_calendar","text":"","code":"cal_gregorian #> Calendar: gregorian #> Granularities: year, month, day tibble::tibble(   x = new_date(year = 2025, month = 5, day = 1:31, calendar = cal_gregorian),   y = as_date(x, calendar = cal_islamic) ) #> # A tibble: 31 × 2 #>              x               y #>          <Gre>           <Hij> #>  1 2025-May-01 1446-Dhu'l_Q-03 #>  2 2025-May-02 1446-Dhu'l_Q-04 #>  3 2025-May-03 1446-Dhu'l_Q-05 #>  4 2025-May-04 1446-Dhu'l_Q-06 #>  5 2025-May-05 1446-Dhu'l_Q-07 #>  6 2025-May-06 1446-Dhu'l_Q-08 #>  7 2025-May-07 1446-Dhu'l_Q-09 #>  8 2025-May-08 1446-Dhu'l_Q-10 #>  9 2025-May-09 1446-Dhu'l_Q-11 #> 10 2025-May-10 1446-Dhu'l_Q-12 #> # ℹ 21 more rows"},{"path":"https://pkg.robjhyndman.com/calcal/reference/new_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new date vector or convert a date vector to a new calendar — as_date","title":"Create a new date vector or convert a date vector to a new calendar — as_date","text":"New dates can calculated using new_date() calendar. Dates can converted one calendar another using as_date(). as_date() also works native R Date class several classes. applied integers, conversion RD day number (day 1 01-01-01 Gregorian calendar).","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/new_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new date vector or convert a date vector to a new calendar — as_date","text":"","code":"as_date(date, calendar)  new_date(..., calendar)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/new_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new date vector or convert a date vector to a new calendar — as_date","text":"date Date vector calendar calendar Target calendar class \"calendar\" ... Named arguments denoting granularities required calendar.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/new_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new date vector or convert a date vector to a new calendar — as_date","text":"date vector class \"rdvec\" specified calendar.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/new_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new date vector or convert a date vector to a new calendar — as_date","text":"","code":"april2025 <- new_date(year = 2025, month = 4, day = 1:30, calendar = cal_gregorian) as_date(april2025, calendar = cal_iso) #> <iso[30]> #>  [1] 2025-14-02 2025-14-03 2025-14-04 2025-14-05 2025-14-06 2025-14-07 #>  [7] 2025-15-01 2025-15-02 2025-15-03 2025-15-04 2025-15-05 2025-15-06 #> [13] 2025-15-07 2025-16-01 2025-16-02 2025-16-03 2025-16-04 2025-16-05 #> [19] 2025-16-06 2025-16-07 2025-17-01 2025-17-02 2025-17-03 2025-17-04 #> [25] 2025-17-05 2025-17-06 2025-17-07 2025-18-01 2025-18-02 2025-18-03"},{"path":"https://pkg.robjhyndman.com/calcal/reference/new_moons.html","id":null,"dir":"Reference","previous_headings":"","what":"Full moons and new moons in Gregorian years — new_moons","title":"Full moons and new moons in Gregorian years — new_moons","text":"Calculate near-full near-new moons vector Gregorian years","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/new_moons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Full moons and new moons in Gregorian years — new_moons","text":"","code":"new_moons(year)  full_moons(year)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/new_moons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Full moons and new moons in Gregorian years — new_moons","text":"year vector Gregorian years","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/new_moons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Full moons and new moons in Gregorian years — new_moons","text":"vector Gregorian dates representing full moons new moons given years. vector dates","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/new_moons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Full moons and new moons in Gregorian years — new_moons","text":"","code":"full_moons(2025) #> <gregorian[12]> #>  [1] 2025-Jan-14 2025-Feb-13 2025-Mar-14 2025-Apr-13 2025-May-12 2025-Jun-10 #>  [7] 2025-Jul-10 2025-Aug-08 2025-Sep-07 2025-Oct-06 2025-Nov-05 2025-Dec-05 new_moons(2025) #> <gregorian[12]> #>  [1] 2025-Jan-29 2025-Feb-28 2025-Mar-29 2025-Apr-27 2025-May-27 2025-Jun-25 #>  [7] 2025-Jul-24 2025-Aug-23 2025-Sep-21 2025-Oct-21 2025-Nov-20 2025-Dec-20"},{"path":"https://pkg.robjhyndman.com/calcal/reference/persian_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Persian dates — persian_date","title":"Persian dates — persian_date","text":"modern Persian calendar adopted 1925 Iran 1957 Afghanistan. alternative version calendar, using arithmetic (rather astronomical) calculations available apersian calendar.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/persian_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Persian dates — persian_date","text":"","code":"persian_date(year = integer(), month = integer(), day = integer())  apersian_date(year = integer(), month = integer(), day = integer())  as_persian(date)  as_apersian(date)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/persian_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Persian dates — persian_date","text":"year Numeric vector years month Numeric vector months day Numeric vector days date Vector dates calendar","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/persian_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Persian dates — persian_date","text":"persian vector object","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/persian_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Persian dates — persian_date","text":"","code":"gregorian_date(2025,5,1:20) |>   as_persian() #> <persian[20]> #>  [1] 1404-Ordi-11 1404-Ordi-12 1404-Ordi-13 1404-Ordi-14 1404-Ordi-15 #>  [6] 1404-Ordi-16 1404-Ordi-17 1404-Ordi-18 1404-Ordi-19 1404-Ordi-20 #> [11] 1404-Ordi-21 1404-Ordi-22 1404-Ordi-23 1404-Ordi-24 1404-Ordi-25 #> [16] 1404-Ordi-26 1404-Ordi-27 1404-Ordi-28 1404-Ordi-29 1404-Ordi-30"},{"path":"https://pkg.robjhyndman.com/calcal/reference/roman.html","id":null,"dir":"Reference","previous_headings":"","what":"Roman calendar dates — roman_date","title":"Roman calendar dates — roman_date","text":"Roman calendar (defined ) Julian calendar different nomenclature. Rather use (year, month, day) triple date, specifies dates using year, month, event, count.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/roman.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Roman calendar dates — roman_date","text":"","code":"roman_date(   year = integer(),   month = integer(),   event = integer(),   count = integer(),   leap_day = logical() )  as_roman(date)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/roman.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Roman calendar dates — roman_date","text":"year numeric vector years month numeric vector months event numeric vector events: 1 = Kalends, 2 = Nones, 3 = Ides count numeric vector counts leap_day logical vector indicating day leap day date Vector dates calendar","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/roman.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Roman calendar dates — roman_date","text":"roman vector object","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/calcal/reference/roman.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Roman calendar dates — roman_date","text":"","code":"roman_date(66, 4, 1, 1, FALSE) #> [1] <NA> new_date(year = 66, month = 4, event = 1, count = 1, leap_day = FALSE, calendar = cal_roman) #> [1] <NA> as_roman(\"2016-01-01\") #> [1] <NA> tibble::tibble(   x = seq(as.Date(\"2025-01-01\"), as.Date(\"2025-12-31\"), by = \"day\"),   y = as_roman(x) ) #> # A tibble: 365 × 2 #>    x                                 y #>    <date>                        <Rom> #>  1 2025-01-01  2025-Jan-ad_xiv_Kalends #>  2 2025-01-02 2025-Jan-ad_xiii_Kalends #>  3 2025-01-03  2025-Jan-ad_xii_Kalends #>  4 2025-01-04   2025-Jan-ad_xi_Kalends #>  5 2025-01-05    2025-Jan-ad_x_Kalends #>  6 2025-01-06   2025-Jan-ad_ix_Kalends #>  7 2025-01-07 2025-Jan-ad_viii_Kalends #>  8 2025-01-08  2025-Jan-ad_vii_Kalends #>  9 2025-01-09   2025-Jan-ad_vi_Kalends #> 10 2025-01-10    2025-Jan-ad_v_Kalends #> # ℹ 355 more rows"},{"path":"https://pkg.robjhyndman.com/calcal/reference/sunrise.html","id":null,"dir":"Reference","previous_headings":"","what":"Sun and moon rise and set given a date and location — sunrise","title":"Sun and moon rise and set given a date and location — sunrise","text":"Calculate time sunrise, sunset, moonrise moonset specific location date. time zone location used specified location object. adjustments made daylight saving.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/sunrise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sun and moon rise and set given a date and location — sunrise","text":"","code":"sunrise(date, location)  sunset(date, location)  moonset(date, location)  moonrise(date, location)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/sunrise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sun and moon rise and set given a date and location — sunrise","text":"date Vector dates calendar. location Vector locations class \"location\", usually output location function","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/sunrise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sun and moon rise and set given a date and location — sunrise","text":"Time sunrise","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/sunrise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sun and moon rise and set given a date and location — sunrise","text":"","code":"melbourne <- location(-37.8136, 144.9631, 31, 10) sydney <- location(-33.8688, 151.2093, 3, 10) sunrise(gregorian_date(2025, 1, 1), c(melbourne, sydney)) #> <time_of_day[2]> #> [1] 05:00:25.00 04:47:19.90 sunset(gregorian_date(2025, 1, 1), c(melbourne, sydney)) #> <time_of_day[2]> #> [1] 19:46:39.75 19:09:47.84 moonrise(gregorian_date(2025, 1, 1), c(melbourne, sydney)) #> <time_of_day[2]> #> [1] 05:42:37.06 05:30:21.65 moonset(gregorian_date(2025, 1, 1), c(melbourne, sydney)) #> <time_of_day[2]> #> [1] 21:11:26.75 20:32:28.22"},{"path":"https://pkg.robjhyndman.com/calcal/reference/tibetan_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Tibetan calendar dates — tibetan_date","title":"Tibetan calendar dates — tibetan_date","text":"several Tibetan calendars. functions implement official Phuglugs version Kalachakra calendar, similar Hindu lunisolar calendars.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/tibetan_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tibetan calendar dates — tibetan_date","text":"","code":"tibetan_date(   year = integer(),   month = integer(),   leap_month = logical(),   day = integer(),   leap_day = logical() )  as_tibetan(date)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/tibetan_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tibetan calendar dates — tibetan_date","text":"year numeric vector years month numeric vector months leap_month logical vector leap months day numeric vector days leap_day logical vector leap days date vector dates calendar","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/tibetan_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tibetan calendar dates — tibetan_date","text":"tibetan_date object","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/calcal/reference/tibetan_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tibetan calendar dates — tibetan_date","text":"","code":"gregorian_date(2025,6,1:10) |> as_tibetan() #> <tibetan[10]> #>  [1] 2152-snron-6   2152-snron-7   2152-snron-8   2152-snron-9   2152-snron-10  #>  [6] 2152-snron-11  2152-snron-12  2152-snron-12* 2152-snron-13  2152-snron-14"},{"path":"https://pkg.robjhyndman.com/calcal/reference/tibetan_new_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Tibetan holidays — tibetan_new_year","title":"Tibetan holidays — tibetan_new_year","text":"Tibetan New Year occurs first day Tibetan calendar. functions calculate date given either Gregorian year Tibetan year. return Gregorian date.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/tibetan_new_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tibetan holidays — tibetan_new_year","text":"","code":"tibetan_new_year(year)  losar(t_year)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/tibetan_new_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tibetan holidays — tibetan_new_year","text":"year vector Gregorian years t_year vector Tibetan years","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/tibetan_new_year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tibetan holidays — tibetan_new_year","text":"vector Gregorian dates corresponding Tibetan New Year","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/calcal/reference/tibetan_new_year.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tibetan holidays — tibetan_new_year","text":"","code":"tibetan_new_year(2025:2028) #> <gregorian[4]> #> [1] 2025-Feb-28 2026-Feb-18 2027-Feb-07 2028-Feb-26 losar(2152:2154) #> <gregorian[3]> #> [1] 2025-Feb-28 2026-Feb-18 2027-Feb-07"},{"path":"https://pkg.robjhyndman.com/calcal/reference/time.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to time of day — as_time_of_day","title":"Convert to time of day — as_time_of_day","text":"Convert time day","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to time of day — as_time_of_day","text":"","code":"as_time_of_day(x, ...)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to time of day — as_time_of_day","text":"x Vector times ... Additional arguments currently used","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to time of day — as_time_of_day","text":"","code":"as_time_of_day(Sys.time()) #> <time_of_day[1]> #> [1] 05:41:10.22"},{"path":"https://pkg.robjhyndman.com/calcal/reference/time_of_day.html","id":null,"dir":"Reference","previous_headings":"","what":"Time of day — time_of_day","title":"Time of day — time_of_day","text":"Create time object","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/time_of_day.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time of day — time_of_day","text":"","code":"time_of_day(hour = integer(), minute = integer(), second = numeric())"},{"path":"https://pkg.robjhyndman.com/calcal/reference/time_of_day.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time of day — time_of_day","text":"hour numeric vector hours minute numeric vector minutes second numeric vector seconds","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/time_of_day.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Time of day — time_of_day","text":"time vector object","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/us_holidays.html","id":null,"dir":"Reference","previous_headings":"","what":"US Holidays — us_memorial_day","title":"US Holidays — us_memorial_day","text":"Functions return Gregorian dates US holidays special days","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/us_holidays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"US Holidays — us_memorial_day","text":"","code":"us_memorial_day(year)  us_independence_day(year)  us_labor_day(year)  us_election_day(year)  us_daylight_saving_start(year)  us_daylight_saving_end(year)  unlucky_fridays(year)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/us_holidays.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"US Holidays — us_memorial_day","text":"year Gregorian year","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/us_holidays.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"US Holidays — us_memorial_day","text":"vector Gregorian dates corresponding US holidays special days.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/us_holidays.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"US Holidays — us_memorial_day","text":"","code":"us_memorial_day(2025) #> <gregorian[1]> #> [1] 2025-May-26 us_independence_day(2025) #> <gregorian[1]> #> [1] 2025-Jul-04 us_labor_day(2025) #> <gregorian[1]> #> [1] 2025-Sep-01 us_election_day(2025) #> <gregorian[1]> #> [1] 2025-Nov-04 us_daylight_saving_start(2025) #> <gregorian[1]> #> [1] 2025-Mar-09 us_daylight_saving_end(2025) #> <gregorian[1]> #> [1] 2025-Nov-02 unlucky_fridays(2025) #> <gregorian[1]> #> [1] 2025-Jun-13"},{"path":"https://pkg.robjhyndman.com/calcal/news/index.html","id":"calcal-development-version","dir":"Changelog","previous_headings":"","what":"calcal (development version)","title":"calcal (development version)","text":"Initial CRAN submission.","code":""}]
