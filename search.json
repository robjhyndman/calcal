[{"path":"https://pkg.robjhyndman.com/calcal/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/calcal/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://pkg.robjhyndman.com/calcal/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://pkg.robjhyndman.com/calcal/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rob Hyndman. Author, maintainer, translator.            R port Edward Reingold. Copyright holder, contributor.           Original Lisp code Nachum Dershowitz. Copyright holder, contributor.           Original Lisp code","code":""},{"path":"https://pkg.robjhyndman.com/calcal/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hyndman R (2025). calcal: Calendrical Calculations. R package version 0.0.0.9000, https://pkg.robjhyndman.com/calcal/.","code":"@Manual{,   title = {calcal: Calendrical Calculations},   author = {Rob Hyndman},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://pkg.robjhyndman.com/calcal/}, }"},{"path":"https://pkg.robjhyndman.com/calcal/index.html","id":"calcal-","dir":"","previous_headings":"","what":"Calendrical Calculations","title":"Calendrical Calculations","text":"goal calcal calendrical calculations, based algorithms described Reingold Dershowitz (2018) Calendrical Calculations, 4th edition, Cambridge University Press. translation Lisp code produced Reingold Dershowitz Calendrica 4.0.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Calendrical Calculations","text":"can install development version calcal GitHub :","code":"# install.packages(\"pak\") pak::pak(\"robjhyndman/calcal\")"},{"path":"https://pkg.robjhyndman.com/calcal/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Calendrical Calculations","text":"Dates multiple calendars: US holidays Christian holidays","code":"library(calcal) #>  #> Attaching package: 'calcal' #> The following object is masked from 'package:base': #>  #>     julian tibble::tibble(   dates = seq(as.Date(\"1900-02-27\"), length = 15, by = \"1 day\"),   RD = as_rd(dates),   Gregorian = as_gregorian(dates),   Julian = as_julian(dates) ) #> # A tibble: 15 × 4 #>    dates          RD  Gregorian     Julian #>    <date>       <RD>      <Gre>      <Jul> #>  1 1900-02-27 693653 1900-02-27 1900-02-15 #>  2 1900-02-28 693654 1900-02-28 1900-02-16 #>  3 1900-03-01 693655 1900-03-01 1900-02-17 #>  4 1900-03-02 693656 1900-03-02 1900-02-18 #>  5 1900-03-03 693657 1900-03-03 1900-02-19 #>  6 1900-03-04 693658 1900-03-04 1900-02-20 #>  7 1900-03-05 693659 1900-03-05 1900-02-21 #>  8 1900-03-06 693660 1900-03-06 1900-02-22 #>  9 1900-03-07 693661 1900-03-07 1900-02-23 #> 10 1900-03-08 693662 1900-03-08 1900-02-24 #> 11 1900-03-09 693663 1900-03-09 1900-02-25 #> 12 1900-03-10 693664 1900-03-10 1900-02-26 #> 13 1900-03-11 693665 1900-03-11 1900-02-27 #> 14 1900-03-12 693666 1900-03-12 1900-02-28 #> 15 1900-03-13 693667 1900-03-13 1900-02-29 c(   us_memorial_day(2025),   us_independence_day(2025),   us_labor_day(2025),   us_election_day(2025),   us_daylight_saving_start(2025),   us_daylight_saving_end(2025) ) #> <gregorian[6]> #> [1] 2025-05-26 2025-07-04 2025-09-01 2025-11-04 2025-03-09 2025-11-02 c(   easter(2025),   orthodox_easter(2025),   alt_orthodox_easter(2025),   pentecost(2025),   advent(2025),   christmas(2025),   epiphany(2026),   orthodox_christmas(2026) ) #> <gregorian[8]> #> [1] 2025-04-20 2025-04-20 2025-04-20 2025-06-08 2025-11-30 2025-12-25 2026-01-04 #> [8] 2026-01-07"},{"path":"https://pkg.robjhyndman.com/calcal/reference/calcal-package.html","id":null,"dir":"Reference","previous_headings":"","what":"calcal: Calendrical Calculations — calcal-package","title":"calcal: Calendrical Calculations — calcal-package","text":"R implementation algorithms described Reingold Dershowitz (4th ed., Cambridge University Press, 2018) doi:10.1017/9781107415058 .","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/calcal/reference/calcal-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"calcal: Calendrical Calculations — calcal-package","text":"Maintainer: Rob Hyndman Rob.Hyndman@monash.edu (ORCID) (R port) [translator] contributors: Edward Reingold (Original Lisp code) [copyright holder, contributor] Nachum Dershowitz (Original Lisp code) [copyright holder, contributor]","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/calcal-vctrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal vctrs methods — calcal-vctrs","title":"Internal vctrs methods — calcal-vctrs","text":"Internal vctrs methods","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/christian.html","id":null,"dir":"Reference","previous_headings":"","what":"Christian Ecclesiastical Holidays — advent","title":"Christian Ecclesiastical Holidays — advent","text":"Functions return Gregorian dates various Christian ecclesiastical holidays special days","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/christian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Christian Ecclesiastical Holidays — advent","text":"","code":"advent(year)  christmas(year)  orthodox_christmas(year)  epiphany(year)  easter(year)  orthodox_easter(year)  alt_orthodox_easter(year)  pentecost(year)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/christian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Christian Ecclesiastical Holidays — advent","text":"year Gregorian year","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/christian.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Christian Ecclesiastical Holidays — advent","text":"","code":"tibble::tibble(   year = 2025:2030,   advent = advent(year),   christmas = christmas(year),   orthodox_christmas = orthodox_christmas(year),   epiphany = epiphany(year),   easter = easter(year),   orthodox_easter = orthodox_easter(year),   alt_orthodox_easter = alt_orthodox_easter(year),   pentecost = pentecost(year) ) #> # A tibble: 6 × 9 #>    year     advent  christmas orthodox_christmas   epiphany     easter #>   <int>      <Gre>      <Gre>              <Gre>      <Gre>      <Gre> #> 1  2025 2025-11-30 2025-12-25         2025-01-07 2025-01-05 2025-04-20 #> 2  2026 2026-11-29 2026-12-25         2025-01-07 2026-01-04 2026-04-05 #> 3  2027 2027-11-28 2027-12-25         2025-01-07 2027-01-03 2027-03-28 #> 4  2028 2028-12-03 2028-12-25         2025-01-07 2028-01-02 2028-04-16 #> 5  2029 2029-12-02 2029-12-25         2025-01-07 2029-01-07 2029-04-01 #> 6  2030 2030-12-01 2030-12-25         2025-01-07 2030-01-06 2030-04-21 #> # ℹ 3 more variables: orthodox_easter <Gre>, alt_orthodox_easter <Gre>, #> #   pentecost <Gre>"},{"path":"https://pkg.robjhyndman.com/calcal/reference/gregorian-parts.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract parts of a Gregorian date — day_of_week","title":"Extract parts of a Gregorian date — day_of_week","text":"Extract days, weeks, months vector Gregorian dates.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/gregorian-parts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract parts of a Gregorian date — day_of_week","text":"","code":"day_of_week(date, numeric = FALSE, first_day = \"Monday\", abbreviate = FALSE)  day_of_month(date)  day_of_year(date, ...)  days_remaining(date)  week_of_month(date, first_day = \"Monday\")  week_of_year(date, first_day = \"Monday\")  month_of_year(date)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/gregorian-parts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract parts of a Gregorian date — day_of_week","text":"date vector Gregorian dates numeric Logical. Return numeric vector TRUE 1 denoting first_day first_day Character denoting first day week. Ignored numeric FALSE. Default \"Monday\" abbreviate Logical. Return abbreviated day names TRUE. Ignored numeric TRUE. ... Additional arguments currently used","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/gregorian-parts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract parts of a Gregorian date — day_of_week","text":"week_of_year() returns ISO 8601 week number first_day Monday. standard, week 1 year defined first week least 4 days year; equivalently, week  containing 4 January. week 0; instead week 1 year may begin previous calendar year. week_of_month() defined analogously week 1 month first week least 4 days month; equivalently, week containing 4th day month. week 0; instead week 1 month may begin previous calendar month. days_remaining() returns number days remaining year. functions self-explanatory.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/gregorian-parts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract parts of a Gregorian date — day_of_week","text":"","code":"april2025 <- gregorian_date(2025, 4, 1:30) day_of_week(april2025) #>  [1] \"Tuesday\"   \"Wednesday\" \"Thursday\"  \"Friday\"    \"Saturday\"  \"Sunday\"    #>  [7] \"Monday\"    \"Tuesday\"   \"Wednesday\" \"Thursday\"  \"Friday\"    \"Saturday\"  #> [13] \"Sunday\"    \"Monday\"    \"Tuesday\"   \"Wednesday\" \"Thursday\"  \"Friday\"    #> [19] \"Saturday\"  \"Sunday\"    \"Monday\"    \"Tuesday\"   \"Wednesday\" \"Thursday\"  #> [25] \"Friday\"    \"Saturday\"  \"Sunday\"    \"Monday\"    \"Tuesday\"   \"Wednesday\" day_of_month(april2025) #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #> [26] 26 27 28 29 30 day_of_year(april2025) #>  [1]  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107 108 109 #> [20] 110 111 112 113 114 115 116 117 118 119 120 days_remaining(april2025) #>  [1] 274 273 272 271 270 269 268 267 266 265 264 263 262 261 260 259 258 257 256 #> [20] 255 254 253 252 251 250 249 248 247 246 245 week_of_month(april2025) #>  [1] 1 1 1 1 1 1 2 2 2 2 2 2 2 3 3 3 3 3 3 3 4 4 4 4 4 4 4 1 1 1 week_of_year(april2025) #>  [1] 14 14 14 14 14 14 15 15 15 15 15 15 15 16 16 16 16 16 16 16 17 17 17 17 17 #> [26] 17 17 18 18 18 month_of_year(april2025) #>  [1] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4"},{"path":"https://pkg.robjhyndman.com/calcal/reference/gregorian.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to a Gregorian date — as_gregorian","title":"Convert to a Gregorian date — as_gregorian","text":"Convert Gregorian date","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/gregorian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to a Gregorian date — as_gregorian","text":"","code":"as_gregorian(date, ...)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/gregorian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to a Gregorian date — as_gregorian","text":"date Vector dates calendar ... Additional arguments currently used","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/gregorian.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to a Gregorian date — as_gregorian","text":"","code":"as_gregorian(\"2016-01-01\") #> <gregorian[1]> #> [1] 2016-01-01 as_gregorian(Sys.Date()) #> <gregorian[1]> #> [1] 2025-05-19 tibble::tibble(   x = seq(as.Date(\"2025-01-01\"), as.Date(\"2025-12-31\"), by = \"day\"),   y = as_gregorian(x) ) #> # A tibble: 365 × 2 #>    x                   y #>    <date>          <Gre> #>  1 2025-01-01 2025-01-01 #>  2 2025-01-02 2025-01-02 #>  3 2025-01-03 2025-01-03 #>  4 2025-01-04 2025-01-04 #>  5 2025-01-05 2025-01-05 #>  6 2025-01-06 2025-01-06 #>  7 2025-01-07 2025-01-07 #>  8 2025-01-08 2025-01-08 #>  9 2025-01-09 2025-01-09 #> 10 2025-01-10 2025-01-10 #> # ℹ 355 more rows"},{"path":"https://pkg.robjhyndman.com/calcal/reference/gregorian_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Gregorian calendar dates — gregorian_date","title":"Gregorian calendar dates — gregorian_date","text":"Create Gregorian date object.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/gregorian_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gregorian calendar dates — gregorian_date","text":"","code":"gregorian_date(year = integer(), month = integer(), day = integer())"},{"path":"https://pkg.robjhyndman.com/calcal/reference/gregorian_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gregorian calendar dates — gregorian_date","text":"year numeric vector years month numeric vector months day numeric vector days","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/gregorian_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gregorian calendar dates — gregorian_date","text":"gregorian vector object","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/gregorian_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gregorian calendar dates — gregorian_date","text":"","code":"gregorian_date(2025, 4, 19:30) #> <gregorian[12]> #>  [1] 2025-04-19 2025-04-20 2025-04-21 2025-04-22 2025-04-23 2025-04-24 #>  [7] 2025-04-25 2025-04-26 2025-04-27 2025-04-28 2025-04-29 2025-04-30"},{"path":"https://pkg.robjhyndman.com/calcal/reference/iso_date.html","id":null,"dir":"Reference","previous_headings":"","what":"ISO calendar dates — iso_date","title":"ISO calendar dates — iso_date","text":"Create ISO 8601 date object. Weeks defined starting Mondays. Week 1 first week least 4 days year. Equivalently, week containing 4 January. week 0; instead week 1 year may begin previous calendar year.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/iso_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ISO calendar dates — iso_date","text":"","code":"iso_date(year = integer(), week = integer(), day = integer())  as_iso(date, ...)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/iso_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ISO calendar dates — iso_date","text":"year numeric vector years week numeric vector weeks day numeric vector days date Vector dates calendar ... Additional arguments currently used","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/iso_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ISO calendar dates — iso_date","text":"iso vector object","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/iso_date.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ISO calendar dates — iso_date","text":"flexible week numbering possible using Gregorian dates week_of_year().","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/calcal/reference/iso_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ISO calendar dates — iso_date","text":"","code":"iso_date(2025, 23, 2:4) #> <iso[3]> #> [1] 2025-23-02 2025-23-03 2025-23-04 as_gregorian(iso_date(2025, 23, 2:4)) #> <gregorian[3]> #> [1] 2025-06-03 2025-06-04 2025-06-05 as_iso(gregorian_date(2025, 1, 1:31)) #> <iso[31]> #>  [1] 2025-01-03 2025-01-04 2025-01-05 2025-01-06 2025-01-07 2025-02-01 #>  [7] 2025-02-02 2025-02-03 2025-02-04 2025-02-05 2025-02-06 2025-02-07 #> [13] 2025-03-01 2025-03-02 2025-03-03 2025-03-04 2025-03-05 2025-03-06 #> [19] 2025-03-07 2025-04-01 2025-04-02 2025-04-03 2025-04-04 2025-04-05 #> [25] 2025-04-06 2025-04-07 2025-05-01 2025-05-02 2025-05-03 2025-05-04 #> [31] 2025-05-05 as_iso(\"2016-01-01\") #> <iso[1]> #> [1] 2015-53-05 as_iso(Sys.Date()) #> <iso[1]> #> [1] 2025-21-01 tibble::tibble(   date = seq(as.Date(\"2025-01-01\"), as.Date(\"2025-12-31\"), by = \"day\"),   iso = as_iso(date) ) #> # A tibble: 365 × 2 #>    date              iso #>    <date>          <iso> #>  1 2025-01-01 2025-01-03 #>  2 2025-01-02 2025-01-04 #>  3 2025-01-03 2025-01-05 #>  4 2025-01-04 2025-01-06 #>  5 2025-01-05 2025-01-07 #>  6 2025-01-06 2025-02-01 #>  7 2025-01-07 2025-02-02 #>  8 2025-01-08 2025-02-03 #>  9 2025-01-09 2025-02-04 #> 10 2025-01-10 2025-02-05 #> # ℹ 355 more rows"},{"path":"https://pkg.robjhyndman.com/calcal/reference/julian.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to a Julian date — as_julian","title":"Convert to a Julian date — as_julian","text":"Convert Julian date","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/julian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to a Julian date — as_julian","text":"","code":"as_julian(date, ...)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/julian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to a Julian date — as_julian","text":"date Vector dates calendar ... Additional arguments currently used","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/julian.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to a Julian date — as_julian","text":"","code":"as_julian(\"2016-01-01\") #> <julian[1]> #> [1] 2015-12-19 as_julian(Sys.Date()) #> <julian[1]> #> [1] 2025-05-06 tibble::tibble(   x = seq(as.Date(\"2025-01-01\"), as.Date(\"2025-12-31\"), by = \"day\"),   y = as_gregorian(x),   z = as_julian(x) ) #> # A tibble: 365 × 3 #>    x                   y          z #>    <date>          <Gre>      <Jul> #>  1 2025-01-01 2025-01-01 2024-12-19 #>  2 2025-01-02 2025-01-02 2024-12-20 #>  3 2025-01-03 2025-01-03 2024-12-21 #>  4 2025-01-04 2025-01-04 2024-12-22 #>  5 2025-01-05 2025-01-05 2024-12-23 #>  6 2025-01-06 2025-01-06 2024-12-24 #>  7 2025-01-07 2025-01-07 2024-12-25 #>  8 2025-01-08 2025-01-08 2024-12-26 #>  9 2025-01-09 2025-01-09 2024-12-27 #> 10 2025-01-10 2025-01-10 2024-12-28 #> # ℹ 355 more rows"},{"path":"https://pkg.robjhyndman.com/calcal/reference/julian_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Julian calendar dates — julian_date","title":"Julian calendar dates — julian_date","text":"Create Julian date object.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/julian_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Julian calendar dates — julian_date","text":"","code":"julian_date(year = integer(), month = integer(), day = integer())"},{"path":"https://pkg.robjhyndman.com/calcal/reference/julian_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Julian calendar dates — julian_date","text":"year numeric vector years month numeric vector months day numeric vector days","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/julian_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Julian calendar dates — julian_date","text":"julian vector object","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/julian_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Julian calendar dates — julian_date","text":"","code":"julian_date(2025, 4, 19:30) #> <julian[12]> #>  [1] 2025-04-19 2025-04-20 2025-04-21 2025-04-22 2025-04-23 2025-04-24 #>  [7] 2025-04-25 2025-04-26 2025-04-27 2025-04-28 2025-04-29 2025-04-30"},{"path":"https://pkg.robjhyndman.com/calcal/reference/location.html","id":null,"dir":"Reference","previous_headings":"","what":"Locations — location","title":"Locations — location","text":"Create location object","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Locations — location","text":"","code":"location(   latitude = numeric(),   longitude = numeric(),   elevation = numeric(),   zone = numeric() )"},{"path":"https://pkg.robjhyndman.com/calcal/reference/location.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Locations — location","text":"latitude numeric vector latitudes longitude numeric vector longitudes elevation numeric vector elevations sea level zone numeric vector time zones (relative UTC)","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/location.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Locations — location","text":"location vector object","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/location.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Locations — location","text":"","code":"melbourne <- location(-37.8136, 144.9631, 31, 10)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/lunar_phase.html","id":null,"dir":"Reference","previous_headings":"","what":"Lunar phase at date — lunar_phase","title":"Lunar phase at date — lunar_phase","text":"Lunar phase date, angle degrees. angle 0 means new moon, 90 degrees means first quarter, 180 means full moon, 270 degrees means last quarter.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/lunar_phase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lunar phase at date — lunar_phase","text":"","code":"lunar_phase(date, ...)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/lunar_phase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lunar phase at date — lunar_phase","text":"date Date vector ... Additional arguments","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/lunar_phase.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lunar phase at date — lunar_phase","text":"","code":"april2025 <- seq(as.Date(\"2025-04-01\"), as.Date(\"2025-04-30\"), by = \"1 day\") lunar_phase(april2025) #>  [1]  35.87571  49.68103  63.14151  76.19938  88.83943 101.08071 112.96536 #>  [8] 124.54784 135.88624 147.03637 158.04870 168.96764 179.83223 190.67757 #> [15] 201.53670 212.44314 223.43391 234.55221 245.84850 257.37951 269.20513 #> [22] 281.38360 293.96466 306.97947 320.42760 334.26406 348.39227   2.66872 #> [29]  16.92140  30.97752"},{"path":"https://pkg.robjhyndman.com/calcal/reference/new_moons.html","id":null,"dir":"Reference","previous_headings":"","what":"Full moons and new moons in Gregorian years — new_moons","title":"Full moons and new moons in Gregorian years — new_moons","text":"Calculate near-full near-new moons vector Gregorian years","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/new_moons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Full moons and new moons in Gregorian years — new_moons","text":"","code":"new_moons(year)  full_moons(year)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/new_moons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Full moons and new moons in Gregorian years — new_moons","text":"year vector Gregorian years","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/new_moons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Full moons and new moons in Gregorian years — new_moons","text":"vector dates","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/new_moons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Full moons and new moons in Gregorian years — new_moons","text":"","code":"full_moons(2025) #> <gregorian[12]> #>  [1] 2025-01-15 2025-02-13 2025-03-15 2025-04-13 2025-05-13 2025-06-11 #>  [7] 2025-07-10 2025-08-09 2025-09-07 2025-10-07 2025-11-05 2025-12-05 new_moons(2025) #> <gregorian[12]> #>  [1] 2025-01-30 2025-02-28 2025-03-29 2025-04-28 2025-05-27 2025-06-25 #>  [7] 2025-07-25 2025-08-23 2025-09-22 2025-10-22 2025-11-20 2025-12-20"},{"path":"https://pkg.robjhyndman.com/calcal/reference/rd_fixed.html","id":null,"dir":"Reference","previous_headings":"","what":"RD fixed dates — rd_fixed","title":"RD fixed dates — rd_fixed","text":"Create rd_fixed object representing RD (Rata Die) fixed date day 1 01-01-01","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/rd_fixed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RD fixed dates — rd_fixed","text":"","code":"rd_fixed(rd = double())  as_rd(date, ...)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/rd_fixed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RD fixed dates — rd_fixed","text":"rd numeric vector representing number days since (including) 01-01-01. date Vector dates calendar ... Additional arguments currently used","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/rd_fixed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RD fixed dates — rd_fixed","text":"rd_fixed vector object","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/rd_fixed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"RD fixed dates — rd_fixed","text":"","code":"rd_fixed(1:100) #> <rd_fixed[100]> #>   [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18 #>  [19]  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36 #>  [37]  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54 #>  [55]  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72 #>  [73]  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90 #>  [91]  91  92  93  94  95  96  97  98  99 100 as_rd(\"2016-01-01\") #> <rd_fixed[1]> #> [1] 735964 as_rd(Sys.Date()) #> <rd_fixed[1]> #> [1] 739390"},{"path":"https://pkg.robjhyndman.com/calcal/reference/roman_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Roman calendar dates — roman_date","title":"Roman calendar dates — roman_date","text":"Create Roman date object.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/roman_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Roman calendar dates — roman_date","text":"","code":"roman_date(   year = integer(),   month = integer(),   event = integer(),   count = integer(),   leap = logical() )  as_roman(date, ...)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/roman_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Roman calendar dates — roman_date","text":"year numeric vector years month numeric vector months event numeric vector events: 1 = KALENDS, 2 = NONES, 3 = IDES count numeric vector counts: leap logical vector indicating year leap year date date object ... Additional arguments currently used","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/roman_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Roman calendar dates — roman_date","text":"roman vector object","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/roman_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Roman calendar dates — roman_date","text":"","code":"roman_date(66, 4, 1, 1, FALSE) #> <roman_date[1]> #> [1] 66-04-01-01 as_roman(Sys.Date()) #> <roman_date[1]> #> [1] 2025-05-02-02"},{"path":"https://pkg.robjhyndman.com/calcal/reference/sunrise.html","id":null,"dir":"Reference","previous_headings":"","what":"Sunrise and sunset given a date and location — sunrise","title":"Sunrise and sunset given a date and location — sunrise","text":"Calculate time sunrise sunset specific location date. time zone location used specified location object.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/sunrise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sunrise and sunset given a date and location — sunrise","text":"","code":"sunrise(date, location, ...)  sunset(date, location, ...)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/sunrise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sunrise and sunset given a date and location — sunrise","text":"date Date rd_fixed format location Location class \"location\", usually output location function ... Additional arguments passed specific methods","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/sunrise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sunrise and sunset given a date and location — sunrise","text":"Time sunrise","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/sunrise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sunrise and sunset given a date and location — sunrise","text":"","code":"melbourne <- location(-37.8136, 144.9631, 31, 10) sydney <- location(-33.8688, 151.2093, 3, 10) sunrise(\"2025-01-01\", c(melbourne, sydney)) #> <time_of_day[2]> #> [1] 05:00:25.00 04:47:19.90 sunset(\"2025-01-01\", c(melbourne, sydney)) #> <time_of_day[2]> #> [1] 19:46:39.75 19:09:47.84"},{"path":"https://pkg.robjhyndman.com/calcal/reference/time.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to time of day — as_time_of_day","title":"Convert to time of day — as_time_of_day","text":"Convert time day","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to time of day — as_time_of_day","text":"","code":"as_time_of_day(x, ...)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to time of day — as_time_of_day","text":"x Vector times ... Additional arguments currently used","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to time of day — as_time_of_day","text":"","code":"as_time_of_day(Sys.time()) #> <time_of_day[1]> #> [1] 00:48:51.57"},{"path":"https://pkg.robjhyndman.com/calcal/reference/time_of_day.html","id":null,"dir":"Reference","previous_headings":"","what":"Time of day — time_of_day","title":"Time of day — time_of_day","text":"Create time object","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/time_of_day.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time of day — time_of_day","text":"","code":"time_of_day(hour = integer(), minute = integer(), second = numeric())"},{"path":"https://pkg.robjhyndman.com/calcal/reference/time_of_day.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time of day — time_of_day","text":"hour numeric vector hours minute numeric vector minutes second numeric vector seconds","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/time_of_day.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Time of day — time_of_day","text":"time vector object","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/us_holidays.html","id":null,"dir":"Reference","previous_headings":"","what":"US Holidays — us_memorial_day","title":"US Holidays — us_memorial_day","text":"Functions return Gregorian dates US holidays special days","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/us_holidays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"US Holidays — us_memorial_day","text":"","code":"us_memorial_day(year)  us_independence_day(year)  us_labor_day(year)  us_election_day(year)  us_daylight_saving_start(year)  us_daylight_saving_end(year)  unlucky_fridays(year)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/us_holidays.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"US Holidays — us_memorial_day","text":"year Gregorian year","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/us_holidays.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"US Holidays — us_memorial_day","text":"","code":"us_memorial_day(2025) #> <gregorian[1]> #> [1] 2025-05-26 us_independence_day(2025) #> <gregorian[1]> #> [1] 2025-07-04 us_labor_day(2025) #> <gregorian[1]> #> [1] 2025-09-01 us_election_day(2025) #> <gregorian[1]> #> [1] 2025-11-04 us_daylight_saving_start(2025) #> <gregorian[1]> #> [1] 2025-03-09 us_daylight_saving_end(2025) #> <gregorian[1]> #> [1] 2025-11-02 unlucky_fridays(2025) #> <gregorian[1]> #> [1] 2025-06-13"}]
