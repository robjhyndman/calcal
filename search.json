[{"path":"https://pkg.robjhyndman.com/calcal/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rob Hyndman. Author, maintainer, copyright holder.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hyndman R (2025). calcal: Calendrical Calculations. R package version 0.0.0.9000, https://pkg.robjhyndman.com/calcal/.","code":"@Manual{,   title = {calcal: Calendrical Calculations},   author = {Rob Hyndman},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://pkg.robjhyndman.com/calcal/}, }"},{"path":"https://pkg.robjhyndman.com/calcal/index.html","id":"calcal-","dir":"","previous_headings":"","what":"Calendrical Calculations","title":"Calendrical Calculations","text":"goal calcal calendrical calculations, based algorithms described Reingold Dershowitz (2018) Calendrical Calculations, 4th edition, Cambridge University Press.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Calendrical Calculations","text":"can install development version calcal GitHub :","code":"# install.packages(\"pak\") pak::pak(\"robjhyndman/calcal\")"},{"path":"https://pkg.robjhyndman.com/calcal/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Calendrical Calculations","text":"Today’s date multiple calendars: US holidays","code":"library(calcal) #>  #> Attaching package: 'calcal' #> The following object is masked from 'package:base': #>  #>     julian today <- Sys.Date() as_rd(today) #> <rd_fixed[1]> #> [1] 739362 as_gregorian(today) #> <gregorian[1]> #> [1] 2025-04-21 c(   us_independence_day(2025),   us_labor_day(2025),   us_memorial_day(2025),   us_election_day(2025),   us_daylight_saving_start(2025),   us_daylight_saving_end(2025),   christmas(2025),   advent(2025),   epiphany(2025) ) #> <gregorian[9]> #> [1] 2025-07-04 2025-09-01 2025-05-26 2025-11-04 2025-04-06 2025-10-26 2025-12-25 #> [8] 2025-11-30 2025-01-05"},{"path":"https://pkg.robjhyndman.com/calcal/reference/calcal-package.html","id":null,"dir":"Reference","previous_headings":"","what":"calcal: Calendrical Calculations — calcal-package","title":"calcal: Calendrical Calculations — calcal-package","text":"R implementation algorithms described Reingold Dershowitz (2018) doi:10.1017/9781107415058 .","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/calcal-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"calcal: Calendrical Calculations — calcal-package","text":"Maintainer: Rob Hyndman Rob.Hyndman@monash.edu (ORCID) [copyright holder]","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/calcal-vctrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal vctrs methods — calcal-vctrs","title":"Internal vctrs methods — calcal-vctrs","text":"Internal vctrs methods","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/gregorian.html","id":null,"dir":"Reference","previous_headings":"","what":"Gregorian dates — gregorian","title":"Gregorian dates — gregorian","text":"Create Gregorian date object. Dates establishment Gregorian calendar computed retrospectively.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/gregorian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gregorian dates — gregorian","text":"","code":"gregorian(year = integer(), month = integer(), day = integer())  as_gregorian(date, ...)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/gregorian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gregorian dates — gregorian","text":"year numeric vector years month numeric vector months day numeric vector days date Vector dates calendar ... Additional arguments currently used","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/gregorian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gregorian dates — gregorian","text":"gregorian vector object","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/gregorian.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gregorian dates — gregorian","text":"","code":"gregorian(2025, 4, 19) #> <gregorian[1]> #> [1] 2025-04-19 as_gregorian(\"2016-01-01\") #> <gregorian[1]> #> [1] 2016-01-01 as_gregorian(Sys.Date()) #> <gregorian[1]> #> [1] 2025-04-21 tibble::tibble(   x = seq(as.Date(\"2025-01-01\"), as.Date(\"2025-12-31\"), by = \"day\"),   y = as_gregorian(x) ) #> # A tibble: 365 × 2 #>    x                   y #>    <date>          <Gre> #>  1 2025-01-01 2025-01-01 #>  2 2025-01-02 2025-01-02 #>  3 2025-01-03 2025-01-03 #>  4 2025-01-04 2025-01-04 #>  5 2025-01-05 2025-01-05 #>  6 2025-01-06 2025-01-06 #>  7 2025-01-07 2025-01-07 #>  8 2025-01-08 2025-01-08 #>  9 2025-01-09 2025-01-09 #> 10 2025-01-10 2025-01-10 #> # ℹ 355 more rows"},{"path":"https://pkg.robjhyndman.com/calcal/reference/holidays.html","id":null,"dir":"Reference","previous_headings":"","what":"US Holidays — us_independence_day","title":"US Holidays — us_independence_day","text":"Functions return Gregorian dates (mostly) US holidays special days","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/holidays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"US Holidays — us_independence_day","text":"","code":"us_independence_day(year)  us_labor_day(year)  us_memorial_day(year)  us_election_day(year)  us_daylight_saving_start(year)  us_daylight_saving_end(year)  christmas(year)  advent(year)  epiphany(year)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/holidays.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"US Holidays — us_independence_day","text":"year Gregorian year","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/holidays.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"US Holidays — us_independence_day","text":"","code":"us_independence_day(2025) #> <gregorian[1]> #> [1] 2025-07-04 us_labor_day(2025) #> <gregorian[1]> #> [1] 2025-09-01 us_memorial_day(2025) #> <gregorian[1]> #> [1] 2025-05-26 us_election_day(2025) #> <gregorian[1]> #> [1] 2025-11-04 us_daylight_saving_start(2025) #> <gregorian[1]> #> [1] 2025-04-06 us_daylight_saving_end(2025) #> <gregorian[1]> #> [1] 2025-10-26 christmas(2025) #> <gregorian[1]> #> [1] 2025-12-25 advent(2025) #> <gregorian[1]> #> [1] 2025-11-30 epiphany(2025) #> <gregorian[1]> #> [1] 2025-01-05"},{"path":"https://pkg.robjhyndman.com/calcal/reference/julian.html","id":null,"dir":"Reference","previous_headings":"","what":"Julian dates — julian","title":"Julian dates — julian","text":"Create Julian date object.","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/julian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Julian dates — julian","text":"","code":"julian(year = integer(), month = integer(), day = integer())  as_julian(date, ...)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/julian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Julian dates — julian","text":"year numeric vector years month numeric vector months day numeric vector days date Vector dates calendar ... Additional arguments currently used","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/julian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Julian dates — julian","text":"julian vector object","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/julian.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Julian dates — julian","text":"","code":"julian(2025, 4, 19) #> <julian[1]> #> [1] 2025-04-19 as_julian(\"2016-01-01\") #> <julian[1]> #> [1] 2015-12-19 as_julian(Sys.Date()) #> <julian[1]> #> [1] 2025-04-08 tibble::tibble(   x = seq(as.Date(\"2025-01-01\"), as.Date(\"2025-12-31\"), by = \"day\"),   y = as_gregorian(x),   z = as_julian(x) ) #> # A tibble: 365 × 3 #>    x                   y          z #>    <date>          <Gre>      <Jul> #>  1 2025-01-01 2025-01-01 2024-12-19 #>  2 2025-01-02 2025-01-02 2024-12-20 #>  3 2025-01-03 2025-01-03 2024-12-21 #>  4 2025-01-04 2025-01-04 2024-12-22 #>  5 2025-01-05 2025-01-05 2024-12-23 #>  6 2025-01-06 2025-01-06 2024-12-24 #>  7 2025-01-07 2025-01-07 2024-12-25 #>  8 2025-01-08 2025-01-08 2024-12-26 #>  9 2025-01-09 2025-01-09 2024-12-27 #> 10 2025-01-10 2025-01-10 2024-12-28 #> # ℹ 355 more rows"},{"path":"https://pkg.robjhyndman.com/calcal/reference/rd_fixed.html","id":null,"dir":"Reference","previous_headings":"","what":"RD fixed dates — rd_fixed","title":"RD fixed dates — rd_fixed","text":"Create rd_fixed object representing RD (Rata Die) fixed date day 1 01-01-01","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/rd_fixed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RD fixed dates — rd_fixed","text":"","code":"rd_fixed(rd = integer())  as_rd(date, ...)"},{"path":"https://pkg.robjhyndman.com/calcal/reference/rd_fixed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RD fixed dates — rd_fixed","text":"rd integer vector representing number days since (including) 01-01-01. date Vector dates calendar ... Additional arguments currently used","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/rd_fixed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RD fixed dates — rd_fixed","text":"rd_fixed vector object","code":""},{"path":"https://pkg.robjhyndman.com/calcal/reference/rd_fixed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"RD fixed dates — rd_fixed","text":"","code":"rd_fixed(1:100) #> <rd_fixed[100]> #>   [1] 01  02  03  04  05  06  07  08  09  10  11  12  13  14  15  16  17  18  #>  [19] 19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  #>  [37] 37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  #>  [55] 55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72  #>  [73] 73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90  #>  [91] 91  92  93  94  95  96  97  98  99  100 as_rd(\"2016-01-01\") #> <rd_fixed[1]> #> [1] 735964 as_rd(Sys.Date()) #> <rd_fixed[1]> #> [1] 739362"}]
